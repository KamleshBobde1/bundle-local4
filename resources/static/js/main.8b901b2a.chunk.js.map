{"version":3,"sources":["helper/Constant.js","api/Api.js","MockClientPaginationTable.js","ui/ExpandCollapse.js","ui/MockModalManager.js","ui/SimpleTable.js","page/Config.js","ui/ContentDetailModal.js","page/SingleContentList.js","App.js","custom-element/et-app.js"],"names":["PERPAGEOPTIONS","SELECT_COLLECTION_TYPE","NAME","T_HEADING","SELECT","CREATEDBY","LASTEDITED","CREATEDEDITED","KC_TOKEN_PREFIX","UNIVERSAL_DATE_FORMAT","STRAPI_IMAGE_EXTENSIONS","STRAPI_IMAGE_URL_KEY","domain","process","templateBaseUrl","rootAdminEndPoint","getCollectionTypes","a","axios","get","addAuthorizationRequestConfig","data","getContents","collectionType","page","pageSize","url","fetchContents","filterContentsByName","query","searchBy","Error","getTemplate","token","getDefaultOptions","defaultBearer","console","log","headers","Authorization","config","defaultOptions","mockRows","MockClientPaginationTable","props","totalPages","perPage","state","pagination","Math","ceil","length","onPageInput","e","setState","pageChangeValue","target","value","onSubmit","setPage","Number","isNaN","newPaginationState","Object","assign","onPerPageSelect","eventKey","onFirstPage","onPreviousPage","onNextPage","onLastPage","onSelectRow","event","row","updatedSelectedRows","updatedRow","onRowsLogger","rows","selectedRows","selectedRowIndex","findIndex","r","id","selected","filter","deselectRow","push","selectRow","onSelectAllRows","checked","currentRows","updatedSelections","Set","map","updatedRows","indexOf","ids","onRow","rowIndex","setSelectedContent","selectedCollectionType","className","classNames","role","getSortingColumns","sortingColumns","sortableTransform","sort","onSort","selectedColumn","sortingOrder","defaultSortingOrder","strategy","byProperty","sortingFormatter","customHeaderFormatters","customHeaderFormattersDefinition","selectedContent","name","direction","TABLE_SORT_DIRECTION","ASC","position","columns","property","displayName","header","label","index","rowSpan","colSpan","transforms","formatters","customFormatters","sortableHeaderCellFormatter","cell","rowData","selectionCellFormatter","tableCellFormatter","perPageOptions","this","prevProps","prevState","compose","paginate","orderBy","sortedPaginatedRows","fluid","PfProvider","striped","bordered","hover","dataTable","components","cellProps","Header","headerRows","resolve","Body","rowKey","viewType","PAGINATION_VIEW","TABLE","pageInputValue","amountOfPages","itemCount","itemsStart","itemsEnd","React","Component","ExpandCollapse","handleSubmit","preventDefault","runOnFilterData","values","handleInputChange","onClick","open","tabIndex","style","margin","display","type","onChange","placeholder","MockModalManager","contentName","then","response","arr","el","attributes","createdBy","status","componentDidMount","close","show","contentTypes","obj","uid","startsWith","isDisplayed","contentTypeRefine","forEach","element","info","collectionTypes","collectionTypeOnChange","persist","singularName","pluralName","dialogClassName","onHide","Title","htmlFor","xs","idx","Footer","bsStyle","SimpleTable","renderToggleButton","isMenuShown","height","top","right","border","onChangeTemplateId","setTemplateId","templateType","selectedTemplateType","keys","contentAttribute","item","firstname","lastname","moment","Date","updatedAt","format","publishedAt","templateList","templateName","createdAt","createDate","selectDefaultTemplate","strapiDomain","Config","selectedTemplateId","selectedContentArr","selectedContenttype","nameTwo","encodeURIComponent","JSON","stringify","selectedContentId","handleTypeaheadChangeContentType","selectedContentType","option","templatesList","handleAddNewContent","strapiContentManagerUrl","newWindow","window","focus","bind","title","to","rightSide","marginTop","content","panelGroupId","ContentDetailModal","toggleTab","activeTabKey","constructContentDetailsForModal","contentDetailsOnModal","dataToShowOnModal","updatedBy","updatedFname","updatedLname","renderElementByType_old","key","undefined","Array","isArray","pic","src","formats","thumbnail","width","alt","renderElementByType","renderAccordionData","toString","endsWithAnyImageExtension","string","suffix","toUpperCase","endsWith","isObject","isImageObject","object","includes","ignoreProps","match","renderPanelGroup","PanelGroup","accordion","renderPanel","theKey","theIndex","Panel","renderPanelHeading","renderPanelBody","Heading","renderPanelTitleToggle","renderPanelTitle","marginLeft","charAt","slice","toggle","collapsible","collectionAttributes","dummyData","activeKey","onSelect","i","marginBottom","SingleContentList","setCollectionTypeState","componentDidUpdate","pageInput","currPageWillUpdating","getContentsByCollectionType","filterUidByApiPrefix","collectionTypeData","handleCollectionTypeChange","collType","setSelectedContentName","contentData","contents","results","lastPage","pageCount","totalItems","total","setSearchBy","onContentSearch","searchQuery","searchResult","handleQueryChange","collectionTypeApiData","min","lg","options","toggleMenu","align","onPageSet","changePage","setContent","disabled","App","selectedContentName","tempId","path","exact","WidgetElement","reactRootRef","createRef","mountPoint","current","document","createElement","appendChild","ReactDOM","render","ref","HTMLElement","customElements","define"],"mappings":"kUAIaA,EAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,IAYjCC,EAAyB,yBAMzBC,EAAO,OAKPC,EAAY,CACrBC,OAPkB,SAQlBF,KAAMA,EACNG,UAPqB,aAQrBC,WAPsB,cAQtBC,cAPyB,gBAehBC,EAAkB,aAKlBC,EAAwB,sBAmIxBC,EAA0B,CAAC,QAAS,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,QAC7EC,EAAuB,MC/K9BC,EAAM,UAAMC,yBACZC,EAAe,UAAMD,4BAAN,cACfE,EAAiB,UAAMH,EAAN,2CAOVI,EAAkB,uCAAG,8BAAAC,EAAA,sEACPC,IAAMC,IAAN,UAAaP,EAAb,kCAAqDQ,EAA8B,GAAIZ,IADhF,uBACtBa,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKlBC,EAAW,uCAAG,WAAOC,GAAP,mCAAAN,EAAA,6DAAuBO,EAAvB,+BDXP,ECW2CC,EAApC,+BDVH,ECWhBC,EADmB,UACVX,GADU,OACUQ,EADV,YAC4BA,EAD5B,iBACmDC,EADnD,qBACoEC,GADpE,SAEAP,IAAMC,IAAIO,EAAKN,EAA8B,GAAIZ,IAFjD,uBAEfa,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,2CAAH,sDAMXM,EAAa,uCAAG,WAAOJ,GAAP,SAAAN,EAAA,sEAEZK,EAAYC,GAFA,mFAAH,sDAKbK,EAAoB,uCAAG,WAAOL,EAAgBM,EAAOC,GAA9B,mCAAAb,EAAA,yDAAwCO,EAAxC,+BDtBhB,ECsBqEC,EAArD,+BDrBZ,ECsBfF,EAD2B,sBAEtB,IAAIQ,MAAM,6BAFY,cAI1BL,EAJ0B,UAIjBX,GAJiB,OAIGQ,EAJH,YAIqBA,EAJrB,oBAI+CO,EAJ/C,yBAIwED,EAJxE,iBAIsFL,EAJtF,qBAIuGC,GAJvG,SAKTP,IAAMC,IAAIO,EAAKN,EAA8B,GAAIZ,IALxC,uBAKxBa,EALwB,EAKxBA,KALwB,kBAMzBA,GANyB,4CAAH,0DAWpBW,EAAW,uCAAG,WAAOC,GAAP,eAAAhB,EAAA,sEACJC,IAAMC,IAAN,UAAaL,IADT,cACjBO,EADiB,yBAEhBA,GAFgB,2CAAH,sDAclBa,EAAoB,SAACC,GAKnB,OAHJC,QAAQC,IAAI,mBAVL,IAaCF,IAAkB3B,EACX,CACH8B,QAAS,CACLC,cAAc,UAAD,OAAY,+IAI1B,IAYNnB,EAAgC,WAA4C,IAA3CoB,EAA0C,uDAAjC,GAAIL,EAA6B,uDAAb,SACnEM,EAAiBP,EAAkBC,GACvC,OAAO,2BACAK,GACAC,I,mECnELC,EAAW,GAgFJC,EAAb,kDAQI,WAAYC,GAAQ,IAAD,uBACf,cAAMA,IA0QVC,WAAa,WACT,IAAQC,EAAY,EAAKC,MAAMC,WAAvBF,QACR,OAAOG,KAAKC,KAAKR,EAASS,OAASL,IA7QpB,EA+QnBM,YAAc,SAAAC,GACV,EAAKC,SAAS,CAAEC,gBAAiBF,EAAEG,OAAOC,SAhR3B,EAkRnBC,SAAW,WACP,EAAKC,QAAQ,EAAKZ,MAAMQ,kBAnRT,EAqRnBI,QAAU,SAAAF,GACN,IAAMjC,EAAOoC,OAAOH,GACpB,IACKG,OAAOC,MAAMJ,IACJ,KAAVA,GACAjC,EAAO,GACPA,GAAQ,EAAKqB,aACf,CACE,IAAIiB,EAAqBC,OAAOC,OAAO,GAAI,EAAKjB,MAAMC,YACtDc,EAAmBtC,KAAOA,EAC1B,EAAK8B,SAAS,CAAEN,WAAYc,EAAoBP,gBAAiB/B,MA/RtD,EAkSnByC,gBAAkB,SAACC,EAAUb,GACzB,IAAIS,EAAqBC,OAAOC,OAAO,GAAI,EAAKjB,MAAMC,YACtDc,EAAmBhB,QAAUoB,EAC7BJ,EAAmBtC,KAAO,EAC1B,EAAK8B,SAAS,CAAEN,WAAYc,KAtSb,EAwSnBK,YAAc,WACV,EAAKR,QAAQ,IAzSE,EA2SnBS,eAAiB,WACT,EAAKrB,MAAMC,WAAWxB,KAAO,GAC7B,EAAKmC,QAAQ,EAAKZ,MAAMC,WAAWxB,KAAO,IA7S/B,EAgTnB6C,WAAa,WACQ,EAAKtB,MAAMC,WAApBxB,KACG,EAAKqB,cACZ,EAAKc,QAAQ,EAAKZ,MAAMC,WAAWxB,KAAO,IAnT/B,EAsTnB8C,WAAa,WACT,IAAQ9C,EAAS,EAAKuB,MAAMC,WAApBxB,KACFqB,EAAa,EAAKA,aACpBrB,EAAOqB,GACP,EAAKc,QAAQd,IA1TF,EA6TnB0B,YAAc,SAACC,EAAOC,GAClB,IAIQC,EAAqBC,EAJrBC,EAAiB,EAAKhC,MAAtBgC,aACR,EAA+B,EAAK7B,MAA5B8B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aACRC,EAAmBF,EAAKG,WAAU,SAAAC,GAAC,OAAIA,EAAEC,KAAOT,EAAIS,MACtDH,GAAoB,IAEhBN,EAAIU,UACJT,EAAsBI,EAAaM,QAAO,SAAAH,GAAC,QAAMA,IAAMR,EAAIS,OAC3DP,EAAahC,EAA0B0C,YAAYZ,KAEnDK,EAAaQ,KAAKb,EAAIS,IACtBR,EAAsBI,EACtBH,EAAahC,EAA0B4C,UAAUd,IAErDI,EAAKE,GAAoBJ,EACzB,EAAKrB,SAAS,CACVuB,KAAMA,EACNC,aAAcJ,IAElBE,EAAaC,EAAKO,QAAO,SAAAH,GAAC,OAAIA,EAAEE,eAhVrB,EAmVnBK,gBAAkB,SAAAhB,GACd,IAAQI,EAAiB,EAAKhC,MAAtBgC,aACR,EAA+B,EAAK7B,MAA5B8B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aACRW,EAAUjB,EAAMhB,OAAOiC,QACvBC,EAAc,EAAKA,cAAcb,KAEvC,GAAIY,EAAS,CACT,IAAME,EAAiB,YAChB,IAAIC,IAAJ,sBAAYF,EAAYG,KAAI,SAAAZ,GAAC,OAAIA,EAAEC,OAAnC,YAA2CJ,MAE5CgB,EAAcjB,EAAKgB,KAAI,SAAAZ,GACzB,OAAOU,EAAkBI,QAAQd,EAAEC,KAAO,EAAIvC,EAA0B4C,UAAUN,GAAKA,KAE3F,EAAK3B,SAAS,CAEVuB,KAAMiB,EACNhB,aAAca,IAElBf,EAAakB,EAAYV,QAAO,SAAAH,GAAC,OAAIA,EAAEE,iBACpC,CACH,IAAMa,EAAMN,EAAYG,KAAI,SAAAZ,GAAC,OAAIA,EAAEC,MAC7BS,EAAoBb,EAAaM,QAAO,SAAAH,GAC1C,QAASe,EAAID,QAAQd,IAAM,MAEzBa,EAAcjB,EAAKgB,KAAI,SAAAZ,GACzB,OAAOU,EAAkBI,QAAQd,EAAEC,KAAO,EAAID,EAAItC,EAA0B0C,YAAYJ,MAE5F,EAAK3B,SAAS,CACVuB,KAAMiB,EACNhB,aAAca,IAElBf,EAAakB,EAAYV,QAAO,SAAAH,GAAC,OAAIA,EAAEE,eAlX5B,EAkYnBc,MAAQ,SAACxB,EAAD,GAAuB,EAAfyB,SAIZ,EAAKtD,MAAMuD,mBAAmB,CAAC1B,GAAM,EAAK7B,MAAMwD,wBAEhD,IAEMjB,EAFezC,EAESqD,QAAQtB,EAAIS,KAAO,EACjD,MAAO,CACHmB,UAAWC,IAAW,CAAEnB,SAAUA,IAClCoB,KAAM,QA1YV,IAAMC,EAAoB,kBAAM,EAAKzD,MAAM0D,gBAAkB,IAEvDC,EAAoBC,OAAU,CAChCH,oBACAI,OAAQ,SAAAC,GACJ,EAAKvD,SAAS,CACVmD,eAAgBE,WAAc,CAC1BF,eAAgB,EAAK1D,MAAM0D,eAC3BK,aAAcC,sBACdF,sBAKZG,SAAUL,aAAgBM,aAGxBC,EAAmBP,SAAY,CACjCD,oBACAF,oBACAQ,SAAUL,aAAgBM,aAvBf,OA2Bf,EAAKE,uBAAyBC,mCAE9B,EAAKrE,MAAQ,CAETsE,gBAAiB,GAGjBZ,eAAgB,CACZa,KAAM,CACFC,UAAWC,uBAAqBC,IAChCC,SAAU,IAKlBC,QAAS,CACL,CACIC,SAAU,SACVC,YAAa,SACbC,OAAQ,CACJC,MAAO,SACPnF,MAAO,CACHoF,MAAO,EACPC,QAAS,EACTC,QAAS,EACThD,GAAI,UAERiD,WAAY,CAACzB,GACb0B,WAAY,CAAClB,GACbmB,iBAAkB,CAACC,gCAGvBC,KAAM,CACF3F,MAAO,CACHoF,MAAO,GAEXI,WAAY,CACR,SAAC3E,EAAD,GAAmC,IAAzB+E,EAAwB,EAAxBA,QAAStC,EAAe,EAAfA,SACf,OAAOuC,iCACH,CAAED,UAAStC,YACX,EAAK3B,YAFoB,iBAGf2B,GAHe,gCAGcA,QAM3D,CACI0B,SAAU,QACVC,YAAa,QACbC,OAAQ,CACJC,MAAO,OACPnF,MAAO,CACHoF,MAAO,EACPC,QAAS,EACTC,QAAS,GAEbC,WAAY,CAACzB,GACb0B,WAAY,CAAClB,GACbmB,iBAAkB,CAACC,gCAEvBC,KAAM,CACF3F,MAAO,CACHoF,MAAO,GAEXI,WAAY,CAACM,wBAGrB,CACId,SAAU,YACVE,OAAQ,CACJC,MAAO,aACPnF,MAAO,CACHoF,MAAO,EACPC,QAAS,EACTC,QAAS,GAEbC,WAAY,CAACzB,GACb0B,WAAY,CAAClB,GACbmB,iBAAkB,CAACC,gCAEvBC,KAAM,CACF3F,MAAO,CACHoF,MAAO,GAEXI,WAAY,CAACM,wBAGrB,CACId,SAAU,YACVE,OAAQ,CACJC,MAAO,cACPnF,MAAO,CACHoF,MAAO,EACPC,QAAS,EACTC,QAAS,GAEbC,WAAY,CAACzB,GACb0B,WAAY,CAAClB,GACbmB,iBAAkB,CAACC,gCAEvBC,KAAM,CACF3F,MAAO,CACHoF,MAAO,GAEXI,WAAY,CAACM,wBAGrB,CACId,SAAU,OACVE,OAAQ,CACJC,MAAO,OACPnF,MAAO,CACHoF,MAAO,EACPC,QAAS,EACTC,QAAS,GAEbC,WAAY,CAACzB,GACb0B,WAAY,CAAClB,GACbmB,iBAAkB,CAACC,gCAEvBC,KAAM,CACF3F,MAAO,CACHoF,MAAO,GAEXI,WAAY,CAACM,wBAGrB,CACId,SAAU,YACVE,OAAQ,CACJC,MAAO,eACPnF,MAAO,CACHoF,MAAO,EACPC,QAAS,EACTC,QAAS,GAEbC,WAAY,CAACzB,GACb0B,WAAY,CAAClB,GACbmB,iBAAkB,CAACC,gCAEvBC,KAAM,CACF3F,MAAO,CACHoF,MAAO,GAEXI,WAAY,CAACM,wBAGrB,CACId,SAAU,SACVE,OAAQ,CACJC,MAAO,SACPnF,MAAO,CACHoF,MAAO,EACPC,QAAS,EACTC,QAAS,GAEbC,WAAY,CAACzB,GACb0B,WAAY,CAAClB,GACbmB,iBAAkB,CAACC,gCAEvBC,KAAM,CACF3F,MAAO,CACHoF,MAAO,GAEXI,WAAY,CAACM,yBA8CzB7D,KAAM,EAAKjC,MAAMF,SAIjBoC,aAAc,GAGd9B,WAAY,CACRxB,KAAM,EACNsB,QAAS,EACT6F,eAAgB,CAAC,EAAG,GAAI,KAI5BpF,gBAAiB,GA5PN,EARvB,qDAwQI,WACQqF,KAAKhG,MAAMF,UACXkG,KAAKtF,SAAS,CAAEuB,KAAM+D,KAAKhG,MAAMF,aA1Q7C,gCA8QI,SAAmBmG,EAAWC,GACtBF,KAAKhG,MAAMF,WAAamG,EAAUnG,UAClCkG,KAAKtF,SAAS,CAAEuB,KAAM+D,KAAKhG,MAAMF,aAhR7C,yBA6XI,WACI,MAAsDkG,KAAK7F,MAAnD8B,EAAR,EAAQA,KAAM4B,EAAd,EAAcA,eAAgBkB,EAA9B,EAA8BA,QAAS3E,EAAvC,EAAuCA,WACvC,OAAO+F,YACHC,mBAAShG,GACT2D,SAAY,CACRgB,QAASA,EACTlB,iBACAE,KAAMsC,UACNjC,SAAUL,aAAgBM,aAN3B8B,CAQLlE,KAvYV,oBAwZI,WAAU,IAAD,OACL,EAAiE+D,KAAK7F,MAA9D4E,EAAR,EAAQA,QAAS3E,EAAjB,EAAiBA,WAAYyD,EAA7B,EAA6BA,eAAgBlD,EAA7C,EAA6CA,gBACvC2F,EAAsBN,KAAKlD,cAEjC,OACI,eAAC,OAAD,CAAMyD,OAAK,EAAX,UACI,eAAC,QAAMC,WAAP,CACIC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,WAAS,EACT7B,QAASA,EACT8B,WAAY,CACR3B,OAAQ,CACJS,KAAM,SAAAmB,GACF,OAAO,EAAKvC,uBAAuB,CAC/BuC,YACA/B,UACAlB,iBACA5B,KAAMqE,EAAoBrE,KAC1BW,gBAAiB,EAAKA,qBAd1C,UAoBI,cAAC,QAAMmE,OAAP,CAAcC,WAAYC,aAAmB,CAAElC,cAC/C,cAAC,QAAMmC,KAAP,CACIjF,KAAMqE,EAAoBrE,KAC1BkF,OAAO,KACP9D,MAAO2C,KAAK3C,WAGpB,cAAC,gBAAD,CACI+D,SAAUC,kBAAgBC,MAC1BlH,WAAYA,EACZmH,eAAgB5G,EAChB6G,cAAelB,EAAoBkB,cACnCC,UAAWnB,EAAoBmB,UAC/BC,WAAYpB,EAAoBoB,WAChCC,SAAUrB,EAAoBqB,SAC9BtG,gBAAiB2E,KAAK3E,gBACtBE,YAAayE,KAAKzE,YAClBC,eAAgBwE,KAAKxE,eACrBhB,YAAawF,KAAKxF,YAClBiB,WAAYuE,KAAKvE,WACjBC,WAAYsE,KAAKtE,WACjBZ,SAAUkF,KAAKlF,iBAvcnC,wBACI,SAAiBe,GACb,OAAOV,OAAOC,OAAO,GAAIS,EAAK,CAAEU,UAAU,MAFlD,yBAII,SAAmBV,GACf,OAAOV,OAAOC,OAAO,GAAIS,EAAK,CAAEU,UAAU,QALlD,GAA+CqF,IAAMC,W,QC9BtCC,E,kDA3DX,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IASV+H,aAAe,SAACnG,GACZA,EAAMoG,iBACN,EAAKhI,MAAMiI,gBAAgB,EAAK9H,MAAM+H,OAAOxD,OAZ9B,EAenByD,kBAAoB,SAACvG,GACjB,EAAKlB,SAAS,CACVwH,OAAO,eAAItG,EAAMhB,OAAO8D,KAAO9C,EAAMhB,OAAOC,UAjBjC,EAqBnBuH,QAAU,WACN,EAAK1H,SAAS,CAAE2H,MAAO,EAAKlI,MAAMkI,QApBlC,EAAKlI,MAAQ,CACTkI,MAAM,EACNH,OAAQ,CACJxD,KAAM,KALC,E,iDAyBnB,c,oBAIA,WACI,OACI,qBACIjB,UAAU,sBACVE,KAAK,SACL2E,SAAU,EACVC,MAAO,CAAEC,OAAQ,aAJrB,SAMI,uBAAM1H,SAAUkF,KAAK+B,aAArB,UACI,sBAAKQ,MAAO,CAAEE,QAAS,OAAQD,OAAQ,aAAvC,UACI,yBAAQlG,GAAG,mBAAmBqB,KAAK,SAAS,gBAAc,OAAO,gBAAc,QAAQ+E,KAAK,SAASjF,UAAU,kCAA/G,kBAAsJ,sBAAMA,UAAU,aACtK,uBACIiF,KAAK,SACLhE,KAAK,OACL7D,MAAOmF,KAAK7F,MAAM+H,OAAOxD,KACzBiE,SAAU3C,KAAKmC,kBACfxE,KAAK,WACLF,UAAU,wCACVmF,YAAY,sBAGpB,qBAAKnF,UAAU,mBAAmB8E,MAAO,CAAEC,OAAQ,cAAnD,SACI,wBAAQ/E,UAAU,kBAAlB,+B,GArDKmE,IAAMC,WCKdgB,G,yDACjB,WAAY7I,GAAQ,IAAD,8BACf,cAAMA,IAKViI,gBANmB,uCAMD,WAAOa,GAAP,SAAAzK,EAAA,sEACRW,EAAqB,EAAKmB,MAAMqD,uBAAwBsF,GAAaC,MAAK,SAAAC,GAC5E,IAAMC,EAAMD,EAASvK,KAAKA,KAAKwE,KAAI,SAAAiG,GAI/B,OAHAA,EAAGC,WAAW7G,GAAK4G,EAAG5G,GACtB4G,EAAGC,WAAWC,UAAY,QAC1BF,EAAGC,WAAWE,OAAS,YAChBH,EAAGC,cAEd,EAAKzI,SAAS,CAAEZ,SAAUmJ,OARhB,2CANC,wDAkBnBK,kBAAoB,aAlBD,EAqBnBC,MAAQ,WACJ,EAAK7I,SAAS,CAAE8I,MAAM,KAtBP,EAyBnBnB,KAzBmB,sBAyBZ,8BAAAhK,EAAA,6DACH,EAAKqC,SAAS,CAAE8I,MAAM,IADnB,SAGsBpL,IAHtB,OAIHqL,GADIA,EAHD,QAIyBhL,KAAKA,KAAK+D,QAAO,SAAAkH,GACzC,OAAOA,GAAQA,EAAIC,KAAOD,EAAIC,IAAIC,WAAW,UAAaF,EAAIG,eAE5DC,EAAoB,GAC1BL,EAAalJ,QAAUkJ,EAAaM,SAAQ,SAAAC,GACxCF,EAAkBpH,KAAKsH,EAAQC,SAEnC,EAAKvJ,SAAS,CAAEwJ,gBAAiBJ,IAX9B,2CAzBY,EAuCnBK,uBAAyB,SAAC1J,GACtBA,EAAE2J,UACF,EAAKjK,MAAM+J,gBAAgBH,QAA3B,uCAAmC,WAAOb,GAAP,SAAA7K,EAAA,yDAC3B6K,EAAGmB,eAAiB5J,EAAEG,OAAOC,QAASJ,EAAEG,OAAOC,MADpB,uBAE3B,EAAKH,SAAS,CAAE8C,uBAAwB0F,EAAGoB,aAFhB,SAGrBvL,EAAcmK,EAAGoB,YAAYvB,MAAK,SAAAC,GACpC,IAAMC,EAAMD,EAASvK,KAAKA,KAAKwE,KAAI,SAAAiG,GAK/B,OAJAA,EAAGC,WAAW7G,GAAK4G,EAAG5G,GACtB4G,EAAGC,WAAWC,UAAY,QAC1BF,EAAGC,WAAWE,OAAS,YAEhBH,EAAGC,cAEd,EAAKzI,SAAS,CAAEZ,SAAUmJ,OAXH,2CAAnC,kCAAAjD,KAAA,iBAvCA,EAAK7F,MAAQ,CAAEqJ,MAAM,EAAOU,gBAAiB,GAAIpK,SAAU,GAAI2E,gBAAiB,GAAIjB,uBAAwB,MAF7F,E,0CA0DnB,WAEI,OACI,cAAC,WAAD,UACI,8BAkBA,eAAC,QAAD,CAAO+G,gBAAgB,sBAAsBf,KAAMxD,KAAK7F,MAAMqJ,KAAMgB,OAAQxE,KAAKuD,MAAjF,UACI,eAAC,QAAMxC,OAAP,WACI,wBACItD,UAAU,QACV2E,QAASpC,KAAKuD,MACd,cAAY,OACZ,aAAW,QAJf,SAMI,cAAC,OAAD,CAAMb,KAAK,KAAKhE,KAAK,YAEzB,cAAC,QAAM+F,MAAP,yCAEJ,eAAC,QAAMvD,KAAP,WACI,qBACIzD,UAAU,uCAGVE,KAAK,SACL2E,SAAU,IAOd,eAAC,MAAD,WACI,uBAAO7E,UAAU,yBAAyBiH,QAAQ,QAAlD,6BAGA,cAAC,MAAD,CAAKC,GAAI,EAAT,SACI,yBACIlH,UAAU,eACViB,KAAK,QACL,cAAa,2CACbiE,SAAU3C,KAAKmE,uBAJnB,UAMI,wBAAQtJ,MAAO,EAAf,oCAEImF,KAAK7F,MAAM+J,gBAAgB3J,QAAUyF,KAAK7F,MAAM+J,gBAAgBjH,KAAI,SAACtE,EAAgBiM,GACjF,OACI,wBAA0C/J,MAAOlC,EAAe0L,aAAhE,SAA+E1L,EAAe2L,YAAjF3L,EAAe0L,yBAOpD,cAAC,EAAD,CAAgBpC,gBAAiBjC,KAAKiC,kBAGtC,cAAC,EAAD,CACIjG,aAAc,aACdlC,SAAUkG,KAAK7F,MAAML,SACrB0D,uBAAwBwC,KAAK7F,MAAMqD,uBACnCD,mBAAoByC,KAAKhG,MAAMuD,wBAGvC,eAAC,QAAMsH,OAAP,WACI,cAAC,SAAD,CACIC,QAAQ,UACRrH,UAAU,aACV2E,QAASpC,KAAKuD,MAHlB,oBAOA,cAAC,SAAD,CAAQuB,QAAQ,UAAU1C,QAASpC,KAAKuD,MAAxC,kC,GAlJsB1B,c,kBCHjCkD,GAAb,kDAEI,WAAY/K,GAAQ,IAAD,8BACf,cAAMA,IAYVgL,mBAAqB,cAAGC,YAAH,IAAgB7C,EAAhB,EAAgBA,QAAhB,OACjB,wBACIM,KAAK,SACLH,MAAO,CAAEzD,SAAU,WAAYoG,OAAQ,OAAQC,IAAK,MAAOC,MAAO,MAAOC,OAAQ,uBACjFjD,QAAS,SAAC3H,GACNA,EAAEuH,iBACFI,EAAQ3H,IALhB,SAOC,sBAAMgD,UAAU,wBArBF,EAwBnB6H,mBAAqB,SAAC7K,GAClB,EAAKT,MAAMuL,cAAc9K,EAAEG,OAAOC,QAvBlC,EAAKV,MAAQ,CAETqL,aAAc,CAAC,CAAC,MAAS,OACzBC,qBAAsB,IALX,EAFvB,0CA8BI,WAAU,IAAD,OACL,OACI,mCACI,wBAAOhI,UAAU,yFAAjB,UACI,gCACI,6BACKtC,OAAOuK,KAAKC,IAAkB1I,KAAI,SAAC2I,EAAMhB,GAAP,OAAe,6BAAee,GAAiBC,IAAvBhB,UAGnE,gCAEQ5E,KAAKhG,MAAMyE,gBAAgBlE,OAAS,GAChCyF,KAAKhG,MAAMyE,gBAAgBxB,KAAI,SAAA2I,GAC3B,OACI,+BACI,6BAAKA,EAAKzK,OAAOuK,KAAKE,GAAM,MAC5B,uCAAQA,EAAKxC,UAAUyC,UAAvB,YAAoCD,EAAKxC,UAAU0C,YACnD,6BAAKC,KAAO,IAAIC,KAAKJ,EAAKK,YAAYC,OAAOrO,KAC7C,6BAAKkO,KAAO,IAAIC,KAAKJ,EAAKO,cAAcD,OAAOrO,KAC/C,6BACI,yBAAQ6G,KAAK,UAAUjB,UAAU,eAAekF,SAAU,EAAK2C,mBAA/D,UACI,wBAAQzK,MAAM,IAAd,6BAEC,EAAKb,MAAMoM,aAAanJ,KAAI,SAACiG,GAC1B,OAAO,wBAAoBrI,MAAOqI,EAAG5G,GAA9B,SAAmC4G,EAAGmD,cAAzBnD,EAAG5G,cAV9BsJ,EAAKtJ,kBA5CtD,GAAiCsF,IAAMC,WAwEjC8D,GAAmB,CACrBlB,MAAO,OACP6B,UAAW,aACXL,UAAW,cACXM,WAAY,eACZC,sBAAuB,6BCrErBC,GAAY,UAAMxO,yBAEHyO,G,kDACjB,WAAY1M,GAAQ,IAAD,8BACf,cAAMA,IAaVsL,mBAAqB,SAAC1J,GAClB,EAAKlB,SAAS,CAAEiM,mBAAoB/K,EAAMhB,OAAOC,SAflC,EAkBnB0C,mBAAqB,SAACqJ,EAAoBC,GACtC,EAAKnM,SAAS,CAAE+D,gBAAiBmI,IACjC,EAAKlM,SAAS,CAAEgE,KAAMkI,IACtB,EAAKlM,SAAS,CAAEoM,QAASC,mBAAmBC,KAAKC,UAAUL,MAC3D,EAAKlM,SAAS,CAAEwM,kBAAmBN,EAAmB,GAAGtK,MAtB1C,EAyBnB6K,iCAAmC,SAAA5K,GAC/B,IAAI6K,EAAsB7K,EAASU,KAAI,SAAAoK,GAAM,OAAIA,EAAOlI,SACxD,EAAKzE,SAAS,CAAE0L,aAAcgB,KA3Bf,EA8BnB9D,kBA9BmB,sBA8BC,kCAAAjL,EAAA,sEACSD,IADT,cAEhBqL,GADIA,EADY,QAEYhL,KAAK+D,QAAO,SAAAkH,GACpC,OAAOA,GAAQA,EAAIC,KAAOD,EAAIC,IAAIC,WAAW,UAAaF,EAAIG,eAE5DC,EAAoB,GAC1BL,EAAalJ,QAAUkJ,EAAaM,SAAQ,SAAAC,GACxCF,EAAkBpH,KAAK,CAAEyC,MAAO6E,EAAQC,KAAKK,gBAPjC,SASoBlL,IATpB,gBASJkO,EATI,EASV7O,KACN,EAAKiC,SAAS,CAAE0L,aAAckB,EAAepD,gBAAiBoD,IAV9C,4CA9BD,EA8CjBC,oBAAsB,WACpB,IAAIC,EAAuB,UAAMf,GAAN,0BACvBgB,EAAYC,OAAOrF,KAAKmF,EAAyB,UAClDC,GACCA,EAAUE,SAhDd,EAAKxN,MAAQ,CACTsE,gBAAiB,GACjBC,KAAM,KACNoI,QAAS,KACT5C,gBAAiB,GACjBgD,kBAAmB,EACnBP,mBAAoB,UACpBP,aAAc,IAElB,EAAKmB,oBAAsB,EAAKA,oBAAoBK,KAAzB,gBAXZ,E,0CAsDnB,WACI,OACI,sBAAMnK,UAAU,+CAAhB,SACI,cAAC,MAAD,UACI,cAAC,MAAD,CAAKkH,GAAI,GAAT,SACI,8BACI,gCACI,sBAAMlH,UAAU,0BAA0BoK,MAAM,WAChD,oBAAIpK,UAAU,2CAAd,qBACA,qBAAKA,UAAU,6CAA6CE,KAAK,SAAjE,SACI,0CAEJ,sBAAKF,UAAU,MAAf,UACI,cAAC,MAAD,CAAKkH,GAAI,EAAT,SACI,oBAAIlH,UAAU,4CAAd,0BAIJ,eAAC,MAAD,CAAKkH,GAAI,EAAGlH,UAAU,0CAAtB,UACI,cAAC,IAAD,CAAMqK,GAAG,cAAT,SACI,eAAC,SAAD,CAAQhD,QAAQ,UAAhB,UACK9E,KAAKhG,MAAMyE,gBAAgBlE,OAAS,OAAS,eADlD,gBAIJ,cAAC,SAAD,CAAQkD,UAAU,oCAAoCqH,QAAQ,UAAU1C,QAASpC,KAAKuH,oBAAtF,SN1DL,0BM+DH,cAAC,EAAD,CAAkBQ,WAAW,EAAOxK,mBAAoByC,KAAKzC,qBAC7D,qBAAKgF,MAAO,CAAEyF,UAAW,UACzB,cAAC,GAAD,CAAazC,cAAevF,KAAKhG,MAAMuL,cAAea,aAAcpG,KAAK7F,MAAMiM,aAAc6B,QAASjI,KAAK7F,MAAMsE,gBAAiBA,gBAAiBuB,KAAKhG,MAAMyE,iC,GAtF1JoD,a,wCCqThCqG,GAAe,EACEC,G,kDACjB,WAAYnO,GAAQ,IAAD,8BACf,cAAMA,IAuBVoO,UAAY,SAAChJ,GACT,EAAK1E,SAAS,CAAE2N,aAAcjJ,KAzBf,EA4BnBkJ,gCAAkC,WAE9B,GADA9O,QAAQC,IAAI,qCAAsC,EAAKO,MAAMuO,uBACzDpN,OAAOuK,KAAK,EAAK1L,MAAMuO,uBAAuBhO,QAAUY,OAAOuK,KAAK,EAAK1L,MAAMuO,uBAAuBpL,QAAQ,aAAc,CAC5H,EAAKqL,kBAAL,eAA8B,EAAKxO,MAAMuO,uBACzC,MAAgC,EAAKC,kBAAkBpF,UAA/CyC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SACnB,EAA4D,EAAK0C,kBAAkBC,UAAhEC,EAAnB,EAAQ7C,UAAmC8C,EAA3C,EAAiC7C,SACjC,EAAiC,EAAK0C,kBAA9BpF,EAAR,EAAQA,UAAWqF,EAAnB,EAAmBA,UACfrF,IAAW,EAAKoF,kBAAkBpF,UAAvB,UAAsCyC,EAAtC,YAAmDC,IAC9D2C,IAAW,EAAKD,kBAAkBC,UAAvB,UAAsCC,EAAtC,YAAsDC,MApC1D,EAwCnBC,wBAA0B,SAACC,GACvB,GAAoC,OAAhC,EAAKL,kBAAkBK,SAAiDC,IAAhC,EAAKN,kBAAkBK,GAAnE,CACA,GAA2C,mBAAhC,EAAKL,kBAAkBK,GAC9B,OAAO,EAAKL,kBAAkBK,GAAO,GAClC,GAAIE,MAAMC,QAAQ,EAAKR,kBAAkBK,KAE5C,GAAI,EAAKL,kBAAkBK,IAAQ,EAAKL,kBAAkBK,GAAK,GAA5B,IAC/B,OAAO,EAAKL,kBAAkBK,GAAK5L,KAAI,SAAAgM,GAAG,OACtC,qBAAKC,IAAKjR,wBAAuCgR,EAAIE,QAAQC,UAAUtQ,IAAKoM,OAAO,OAAOmE,MAAM,OAAOC,IAAKL,EAAG,eAKpH,GAA2C,kBAAhC,EAAKT,kBAAkBK,GAErC,OAAI,EAAKL,kBAAkBK,GAAvB,KAC2C,kBAAhC,EAAKL,kBAAkBK,GACvB,qBAAKK,IAAKjR,wBAAuC,EAAKuQ,kBAAkBK,GAAKM,QAAQC,UAAUtQ,IAAKuQ,MAAM,OAAOnE,OAAO,OAAOoE,IAAK,EAAKd,kBAAkBK,GAAvB,OAG5I7B,KAAKC,UAAU,EAAKuB,kBAAkBK,IAEjD,OAAO,EAAKL,kBAAkBK,KA9Df,EAiEnBU,oBAAsB,SAACV,GACnB,GAAoC,OAAhC,EAAKL,kBAAkBK,SAAiDC,IAAhC,EAAKN,kBAAkBK,GAAnE,CACA,GAA2C,mBAAhC,EAAKL,kBAAkBK,GAC9B,OAAO,EAAKL,kBAAkBK,GAAO,GAClC,GAAIE,MAAMC,QAAQ,EAAKR,kBAAkBK,KAE5C,GAAI,EAAKL,kBAAkBK,IAAQ,EAAKL,kBAAkBK,GAAK,IAAM,EAAKL,kBAAkBK,GAAK,GAA5B,IACjE,OAAO,EAAKL,kBAAkBK,GAAK5L,KAAI,SAACgM,EAAK7J,GAAN,OACnC,qBAAiB8J,IAAKjR,wBAAuCgR,EAAIE,QAAQC,UAAUtQ,IAAKoM,OAAO,OAAOmE,MAAM,OAAOC,IAAKL,EAAG,MAAjH7J,WAKf,GAA2C,kBAAhC,EAAKoJ,kBAAkBK,GAErC,OAAI,EAAKL,kBAAkBK,GAAvB,KAC2C,kBAAhC,EAAKL,kBAAkBK,GACvB,qBAAKK,IAAKjR,wBAAuC,EAAKuQ,kBAAkBK,GAAKM,QAAQC,UAAUtQ,IAAKuQ,MAAM,OAAOnE,OAAO,OAAOoE,IAAK,EAAKd,kBAAkBK,GAAvB,OAG5I7B,KAAKC,UAAU,EAAKuB,kBAAkBK,IAEjD,OAAO,EAAKL,kBAAkBK,KAvFf,EA0FnBW,oBAAsB,SAAC/Q,GACnB,OAAa,OAATA,QAA0BqQ,IAATrQ,EACV,uCACgB,mBAATA,EACPA,EAAKgR,WACW,kBAAThR,EACX,EAAKiR,0BAA0BjR,GACxB,qBAAKyQ,IAAKjR,wBAAuCQ,EAAM4Q,MAAM,OAAOnE,OAAO,OAAOoE,IAAI,UAEzF7Q,EACgB,kBAATA,GAES,kBAATA,EADPA,EAIA,wCAzGI,EA6GnBiR,0BAA4B,SAACC,GAAY,IAAD,iBACjB7R,GADiB,IACpC,gCAAS8R,EAAT,QACI,GAAGD,EAAOE,cAAcC,SAASF,GAC7B,OAAO,GAHqB,8BAIpC,OAAO,GAjHQ,EAoHnBG,SAAW,SAACtR,GACR,QAAIA,GACoB,kBAATA,GAtHA,EAgInBuR,cAAgB,SAACC,GACb,IAAIvE,EAAOvK,OAAOuK,KAAKuE,GACvB,SAAGvE,EAAKwE,SAAS,QAAUxE,EAAKwE,SAAS,YAAcxE,EAAKwE,SAAS,QAC9DpS,EAAwBoS,SAASD,EAAM,IAAQJ,iBAnIvC,EA0InBM,YAAc,SAACtB,GACX,OAAQA,EAAIuB,MAAM,eAAiBvB,EAAIuB,MAAM,eAAiBvB,EAAIuB,MAAM,iBAAmBvB,EAAIuB,MAAM,eAAiBvB,EAAIuB,MAAM,eAAiBvB,EAAIuB,MAAM,OA3I5I,EA8InBC,iBAAmB,SAAC5R,GAEhB,OADAyP,IAA8B,EAE1B,cAACoC,GAAA,EAAD,CAAYC,WAAS,EAACjO,GAAI4L,GAA1B,SACKzP,GAAQ0C,OAAOuK,KAAKjN,GAAM8B,OAAS,EAE/B,EAAKyP,cAAcvR,GAMpB,EAAK+R,YAAYzS,EAAsB,EAAGU,EAAI,KAJ9C0C,OAAOuK,KAAKjN,GAAM+D,QAAO,SAAAqM,GAAG,OAAI,EAAKsB,YAAYtB,MAAM5L,KAAI,SAAC4L,EAAKzJ,GAC7D,OAAQ,EAAKoL,YAAY3B,EAAKzJ,EAAO3G,EAAKoQ,OAKlD,wDA5JO,EAiKnB2B,YAAc,SAACC,EAAQC,EAAUjS,GAmBzB,OACI,eAACkS,GAAA,EAAD,CAAOrP,SAAUoP,EAAjB,UACK,EAAKE,mBAAmBH,EAAQhS,GAE7B,EAAKsR,SAAStR,IAEd,EAAKoS,gBAAgBpS,GAAM,KALHiS,IArLzB,EAgMnBE,mBAAqB,SAACH,EAAQhS,GAC1B,OACI,cAACkS,GAAA,EAAMG,QAAP,UACK,EAAKf,SAAStR,GAEf,EAAKsS,uBAAuBN,GAE5B,EAAKO,iBAAiBP,EAAQhS,MAvMvB,EA4MnBuS,iBAAmB,SAACP,EAAQhS,GACxB,OACI,eAACkS,GAAA,EAAMlG,MAAP,WACI,uBAAMlC,MAAO,CAAE0I,WAAY,QAA3B,UACKR,EAAOZ,gBAAkB9R,EAAqB8R,cAE/C,GAEAY,EAAOS,OAAO,GAAGrB,cAAgBY,EAAOU,MAAM,GAAK,IALvD,QADJ,KAM2E,EAAK3B,oBAAoB/Q,OApNzF,EAyNnBsS,uBAAyB,SAACN,GACtB,OACI,cAACE,GAAA,EAAMlG,MAAP,CAAa2G,QAAM,EAAnB,SACI,+BAAOX,EAAOS,OAAO,GAAGrB,cAAgBY,EAAOU,MAAM,QA5N9C,EAiOnBN,gBAAkB,SAACpS,EAAMsR,GACrB,OAAIA,EAEI,cAACY,GAAA,EAAMzJ,KAAP,CAAYmK,aAAW,EAAvB,SACK,EAAKhB,iBAAiB5R,KAK3B,cAACkS,GAAA,EAAMzJ,KAAP,CAAYmK,aAAW,EAAvB,SACI,+BAAO5S,OAzOnB,EAAK0B,MAAQ,CACTqJ,MAAM,EACNU,gBAAiB,GACjBpK,SAAU,GACV2E,gBAAiB,GACjBjB,uBAAwB,KACxB8N,qBAAsB,EAAKtR,MAAMuR,UACjClD,aAAc,GAElB,EAAKG,kBAAoB,GACzB,EAAKJ,UAAY,EAAKA,UAAUR,KAAf,gBAEjB,EAAK4C,YAAc,EAAKA,YAAY5C,KAAjB,gBACnB,EAAKgD,mBAAqB,EAAKA,mBAAmBhD,KAAxB,gBAC1B,EAAKmD,uBAAyB,EAAKA,uBAAuBnD,KAA5B,gBAC9B,EAAKyC,iBAAmB,EAAKA,iBAAiBzC,KAAtB,gBACxB,EAAKiD,gBAAkB,EAAKA,gBAAgBjD,KAArB,gBACvB,EAAK4B,oBAAsB,EAAKA,oBAAoB5B,KAAzB,gBAC3B,EAAKoC,cAAgB,EAAKA,cAAcpC,KAAnB,gBACrB,EAAKuC,YAAc,EAAKA,YAAYvC,KAAjB,gBArBJ,E,0CAiPnB,WAAU,IAAD,EAGL,OAFA5H,KAAKsI,kCACL9O,QAAQC,IAAI,2BAA4B0B,OAAOuK,KAAK1F,KAAKwI,oBAErD,mCACI,eAAC,QAAD,CAAOjE,gBAAgB,sBAAsBf,KAAMxD,KAAKhG,MAAMwJ,KAAMgB,OAAQxE,KAAKhG,MAAMwK,OAAvF,UACI,eAAC,QAAMzD,OAAP,WACI,wBACItD,UAAU,QACV2E,QAASpC,KAAKhG,MAAMwK,OACpB,cAAY,OACZ,aAAW,QAJf,SAMI,cAAC,OAAD,CAAM9B,KAAK,KAAKhE,KAAK,YAEzB,cAAC,QAAM+F,MAAP,UAActJ,OAAOuK,KAAK1F,KAAKwI,mBAAmBjO,OAAS,GAAKyF,KAAKwI,kBAAkBrN,OAAOuK,KAAK1F,KAAKwI,mBAAmB,SAG/H,eAAC,QAAMtH,KAAP,WACI,qBACIzD,UAAU,uCACVE,KAAK,SACL2E,SAAU,IAGd,8BACI,eAAC,OAAD,CAAMhG,GAAI,KAAMkP,UAAWxL,KAAK7F,MAAMkO,aAAcoD,SAAUzL,KAAKoI,UAAnE,UACK,cAAC,MAAD,CAAK9M,SAAU,EAAGuM,MAAM,kBAAxB,SAmBI7H,KAAKqK,iBAAiBrK,KAAKwI,qBAoEhC,cAAC,MAAD,CAAKlN,SAAU,EAAGuM,MAAM,WAAxB,SACK1M,OAAOuK,KAAK1F,KAAKwI,mBAAmBjO,OAAS,GAAKY,OAAOuK,KAAK1F,KAAKwI,mBAAmBhM,QAAO,SAAAqM,GAAG,OAgC7H,SAAqBA,GACjB,OAAQA,EAAIuB,MAAM,eAAiBvB,EAAIuB,MAAM,eAAiBvB,EAAIuB,MAAM,iBAAmBvB,EAAIuB,MAAM,eAAiBvB,EAAIuB,MAAM,eAAiBvB,EAAIuB,MAAM,MAjC9BD,CAAYtB,MAAM5L,KAAI,SAAC4L,EAAK6C,GAC7H,OACI,qBAAajO,UAAU,MAAM8E,MAAO,CAAEoJ,aAAc,OAAQ3D,UAAW,QAAvE,SACI,sBAAKvK,UAAU,YAAf,UACI,cAAC,MAAD,CAAKkH,GAAI,EAAT,SACI,iCAASkE,EAAIqC,OAAO,GAAGrB,cAAgBhB,EAAIsC,MAAM,OAErD,cAAC,MAAD,CAAKxG,GAAI,SALP+G,gBAkBlC,eAAC,QAAM7G,OAAP,WACI,cAAC,SAAD,CAAQC,QAAQ,UAAUrH,UAAU,aAAa2E,QAASpC,KAAKhG,MAAMwK,OAArE,mBAGA,cAAC,UAAD,GAAQM,QAAQ,UAAU1C,QAASpC,KAAKuD,OAAxC,wBAAwDvD,KAAKhG,MAAMwK,QAAnE,+C,GA7XwB3C,aCzT3B+J,G,kDAEnB,WAAY5R,GAAQ,IAAD,8BACjB,cAAMA,IAqBRsJ,kBAtBmB,sBAsBC,sBAAAjL,EAAA,sEACZ,EAAKwT,yBADO,2CAtBD,EA0BnBC,mBA1BmB,uCA0BE,WAAO7L,EAAWC,GAAlB,SAAA7H,EAAA,yDACf4H,EAAUzC,yBAA2B,EAAKxD,MAAMwD,wBAClD0C,EAAUrH,WAAa,EAAKsB,MAAMtB,UAClC,EAAK6B,SAAS,CAAE9B,KRrCF,EQqCcmT,URrCd,EQqC+BC,qBRrC/B,GQqCd,sBACE,sBAAA3T,EAAA,sEACQ,EAAK4T,4BAA4B,EAAK9R,MAAMqD,uBAAuB,GAAG3C,MAAO,EAAKV,MAAMvB,KAAM,EAAKuB,MAAMtB,UADjH,4CAKAqH,EAAUtH,OAAS,EAAKuB,MAAMvB,KATf,uBAUjB,EAAK8B,SAAS,CAAE+D,gBAAiB,OAVhB,SAWX,EAAKwN,4BAA4B,EAAK9R,MAAMqD,uBAAuB,GAAG3C,MAAO,EAAKV,MAAMvB,KAAM,EAAKuB,MAAMtB,UAX9F,2CA1BF,0DA+CnBqT,qBAAuB,SAACC,GACtB,OAAOA,EAAmB3P,QAAO,SAAA0G,GAAE,OAAIA,EAAGS,IAAIC,WAAW,aAhDxC,EAmDnBvB,KAnDmB,uCAmDZ,WAAO4F,GAAP,SAAA5P,EAAA,sDACL,EAAKqC,SAAS,CAAE8I,MAAM,EAAM+E,sBAAuBN,IAD9C,2CAnDY,wDAuDnB1E,MAAQ,WACN,EAAK7I,SAAS,CAAE8I,MAAM,KAxDL,EA2DnB4I,2BA3DmB,uCA2DU,WAAOzT,GAAP,eAAAN,EAAA,yDACrBgU,EAAW1T,EAAe,GAChC,EAAK+B,SAAS,CAAE8C,uBAAwB7E,KACpC0T,IAAYA,EAASxR,MAHE,gCAInB,EAAKoR,4BAA4BI,EAASxR,OAJvB,OAKzB,EAAKb,MAAMsS,uBAAuBD,EAASxR,OALlB,sBAOzB,EAAKb,MAAMsS,uBAAuB,MAPT,2CA3DV,wDAsEnBL,4BAtEmB,uCAsEW,WAAOtT,EAAgBC,EAAMC,GAA7B,eAAAR,EAAA,sEACFK,EAAYC,EAAgBC,EAAMC,GADhC,OACtB0T,EADsB,OAE5B,EAAK7R,SAAS,CACZ8R,SAAUD,EAAYE,QACtBC,SAAUH,EAAYnS,WAAWuS,UACjC/T,KAAM2T,EAAYnS,WAAWxB,KAC7BC,SAAU0T,EAAYnS,WAAWvB,SACjC+T,WAAYL,EAAYnS,WAAWyS,MACnCC,YAAaP,GAAeA,EAAYE,QAAQlS,QAAUY,OAAOuK,KAAK6G,EAAYE,QAAQ,IAAI,KARpE,2CAtEX,4DAsFnBzH,mBAAqB,cAAGC,YAAH,IAAgB7C,EAAhB,EAAgBA,QAAhB,OACnB,wBACEM,KAAK,SACLH,MAAO,CAAEzD,SAAU,WAAYoG,OAAQ,OAAQC,IAAK,MAAOC,MAAO,MAAOC,OAAQ,uBACjFjD,QAAS,SAAC3H,GACRA,EAAEuH,iBACFI,EAAQ3H,IALZ,SAOC,sBAAMgD,UAAU,wBA9FA,EAqGnB1C,QAAU,SAAAF,GACR,IAAMjC,EAAOoC,OAAOH,GACpB,IACGG,OAAOC,MAAMJ,IACJ,KAAVA,GACAjC,EAAO,GACPA,GAAQ,EAAKqB,aACb,CACA,IAAIiB,EAAqBC,OAAOC,OAAO,GAAI,EAAKjB,MAAMC,YACtDc,EAAmBtC,KAAOA,EAC1B,EAAK8B,SAAS,CAAEN,WAAYc,EAAoBP,gBAAiB/B,MA/GlD,EAmHnBmU,gBAnHmB,uCAmHD,WAAOtS,GAAP,eAAApC,EAAA,yDAChBoC,EAAEuH,kBAEE,EAAK7H,MAAM6S,YAHC,gCAIahU,EACzB,EAAKmB,MAAMqD,uBAAuB,GAAG3C,MACrC,EAAKV,MAAM6S,YAAa,EAAK7S,MAAM2S,YRjIvB,EACI,GQ0HJ,OAIRG,EAJQ,OAQd,EAAKvS,SAAS,CACZ8R,SAAUS,EAAaR,QACvBC,SAAUO,EAAa7S,WAAWuS,UAClC/T,KAAMqU,EAAa7S,WAAWxB,KAC9BC,SAAUoU,EAAa7S,WAAWvB,SAClC+T,WAAYK,EAAa7S,WAAWyS,QAbxB,sBAgBd,EAAKZ,4BAA4B,EAAK9R,MAAMqD,uBAAuB,GAAG2B,OAhBxD,2CAnHC,wDAuInB+N,kBAAoB,SAACzS,GACnBA,EAAEuH,iBACF,EAAKtH,SAAS,CAAEsS,YAAavS,EAAEG,OAAOC,SAzIrB,EA4InBQ,gBAAkB,SAACxC,GACjB,EAAK6B,SAAS,CAAC7B,cA7IE,EAgJnB2B,YAAc,SAAAC,GACZ,EAAKC,SAAS,CAAEsR,qBAAsBvR,EAAEG,OAAOC,SAjJ9B,EAoJnBC,SAAW,YACJ,EAAKX,MAAM6R,sBAAwB,EAAK7R,MAAM6R,sBAAwB,EAAK7R,MAAMuS,UACpF,EAAKhS,SAAS,CAAE9B,MAAO,EAAKuB,MAAM6R,wBApJpC,EAAK7R,MAAQ,CACXvB,KRXc,EQYdoT,qBRZc,EQadnT,SRZkB,EQalB+T,WRZoB,GQapBF,SRZkB,EQalBX,URZmB,EQanBpR,gBRZyB,EQazB6I,MAAM,EACN+E,sBAAuB,GACvByE,YAAa,GACbF,YAAa,GAEbnU,eAAgB,GAChB6E,uBAAwB,GACxBgP,SAAU,GACV/N,gBAAiB,MAlBF,E,iGAyCnB,gCAAApG,EAAA,sEAC6CD,IAD7C,gBACgB+T,EADhB,EACU1T,KACF0U,EAAwBnN,KAAKkM,qBAAqBC,GACxDnM,KAAKtF,SAAS,CAAE/B,eAAgBwU,EAAsBlQ,KAAI,SAAAiG,GAAE,MAAK,CAAE/D,MAAO+D,EAAGe,KAAKhF,YAAapE,MAAOqI,EAAGe,KAAKI,mBAHhH,gD,8EAwDA,SAAWzL,GACToH,KAAKtF,SAAS,CAAE9B,KAAMA,EAAMoT,qBAAsBpT,M,oBAwDpD,WAAU,IAAD,OACDwB,EAAa,CACjBxB,KAAMoH,KAAK7F,MAAMvB,KACjBsB,QAAS8F,KAAK7F,MAAMtB,SACpBkH,eAAgB3I,GAEZsK,EAAuC,IAA1B1B,KAAK7F,MAAMyS,WAAmB,GAAM5M,KAAK7F,MAAMvB,KAAO,GAAKoH,KAAK7F,MAAMtB,SAAY,EAC/F8I,EAAWtH,KAAK+S,IAAIpN,KAAK7F,MAAMvB,KAAOoH,KAAK7F,MAAMtB,SAAUmH,KAAK7F,MAAMyS,YAE5E,OACE,eAAC,OAAD,WACE,cAAC,MAAD,CAAKnP,UAAU,OAAf,SACE,cAAC,MAAD,CAAK4P,GAAI,GAAT,SACE,wDAKJ,cAAC,MAAD,CAAK5P,UAAU,OAAf,SACE,cAAC,MAAD,CAAK4P,GAAI,EAAT,SACE,6BAAI,4BAAIhW,UAGZ,cAAC,MAAD,UACE,cAAC,MAAD,CAAKgW,GAAI,EAAT,SACE,cAAC,KAAD,CACE/Q,GAAG,yBACHsG,YAAavL,EACbiW,QAAStN,KAAK7F,MAAMxB,eACpBgK,SAAU3C,KAAKoM,2BACf7P,SAAUyD,KAAK7F,MAAMqD,uBALvB,SAOG,gBAAGyH,EAAH,EAAGA,YAAasI,EAAhB,EAAgBA,WAAhB,OACC,EAAKvI,mBAAmB,CAAEC,cAAa7C,QAASmL,WAMtDpS,OAAOuK,KAAK1F,KAAK7F,MAAMqD,wBAAwBjD,OAAS,GACxD,qCACE,cAAC,MAAD,CAAKkD,UAAU,OAAf,SACE,cAAC,MAAD,CAAK4P,GAAI,EAAT,SACE,oBAAI9K,MAAO,CAAEoJ,aAAc,OAA3B,SAAoC,mDAGxC,cAAC,MAAD,UACE,cAAC,MAAD,CAAK0B,GAAI,GAAT,SACE,qBACE5P,UAAU,sBACVE,KAAK,SACL2E,SAAU,EACVC,MAAO,CAAEC,OAAQ,aAJnB,SAME,iCACE,sBAAKD,MAAO,CAAEE,QAAS,OAAQD,OAAQ,aAAvC,UACE,wBAAQlG,GAAG,mBAAmBqB,KAAK,SAAS,gBAAc,OAAO,gBAAc,QAAQ+E,KAAK,SAASjF,UAAU,kCAA/G,SAAkJnG,IAClJ,uBACEoL,KAAK,SACLhE,KAAK,OAELiE,SAAU3C,KAAKkN,kBACfvP,KAAK,WACLF,UAAU,wCACVmF,YRxNc,iCQ2NlB,qBAAKnF,UAAU,mBAAmB8E,MAAO,CAAEC,OAAQ,cAAnD,SACE,wBAAQ/E,UAAU,kBAAkB2E,QAASpC,KAAK+M,gBAAlD,+BAMV,cAAC,MAAD,CAAKtP,UAAU,OAAf,SACE,eAAC,MAAD,CAAK4P,GAAI,GAAT,UACE,wBAAO5P,UAAU,2DAAjB,UACE,gCACE,6BACGtC,OAAOuK,KAAKnO,GAAW0F,KAAI,SAAAiG,GAAE,OAAI,6BAAc3L,EAAU2L,IAAfA,UAG/C,gCACGlD,KAAK7F,MAAMqS,SAASvP,KAAI,SAAAgL,GACvB,OACE,qBAAqBxK,UAAU,mBAA/B,UACE,oBAAI4L,MAAM,KAAKmE,MAAM,SAArB,SACE,uBAAOpL,QAAS,WACd,EAAK1H,SAAS,CAAE+D,gBAAiBwJ,KAEjCvF,KAAK,QAAQpG,GAAI2L,EAAUA,EAAQ3L,GAAIoC,KAAK,UAAU7D,MAAOoN,EAAQ3L,OAGzE,oBAAI8F,QAAS,kBAAM,EAAKC,KAAK4F,IAA7B,SAAwCA,EAAQ9M,OAAOuK,KAAKuC,GAAS,MACrE,oBAAI7F,QAAS,kBAAM,EAAKC,KAAK4F,IAA7B,mBAA2CA,EAAQ7E,UAAUyC,UAA7D,YAA0EoC,EAAQ7E,UAAU0C,YAC5F,oBAAI1D,QAAS,kBAAM,EAAKC,KAAK4F,IAA7B,SAAwClC,KAAO,IAAIC,KAAKiC,EAAQ9B,cAAcD,OAAOrO,KACrF,oBAAIuK,QAAS,kBAAM,EAAKC,KAAK4F,IAA7B,SAAwClC,KAAO,IAAIC,KAAKiC,EAAQhC,YAAYC,OAAOrO,OAX5EoQ,EAAQ3L,YAgBzB,qBAAKmB,UAAU,gBACf,cAAC,gBAAD,CACEgE,UAAWzB,KAAK7F,MAAMyS,WACtBlL,WAAYA,EACZC,SAAUA,EACVP,SAAS,QACThH,WAAYA,EACZoH,cAAexB,KAAK7F,MAAMuS,SAC1BnL,eAAgBvB,KAAK7F,MAAM6R,qBAC3ByB,UAAWzN,KAAK0N,WAChBrS,gBAAiB2E,KAAK3E,gBACtBE,YAAa,kBAAM,EAAKmS,WAAW,IACnClS,eAAgB,kBAAM,EAAKkS,WAAW,EAAKvT,MAAMvB,KAAO,IACxD4B,YAAawF,KAAKxF,YAClBiB,WAAY,kBAAM,EAAKiS,WAAW,EAAKvT,MAAMvB,KAAO,IACpD8C,WAAY,kBAAM,EAAKgS,WAAW,EAAKvT,MAAMuS,WAC7C5R,SAAUkF,KAAKlF,gBAKrB,eAAC,MAAD,CAAK2C,UAAU,OAAf,UACE,cAAC,MAAD,CAAK4P,GAAI,IAET,cAAC,MAAD,CAAKA,GAAI,EAAG5P,UAAU,0CAAtB,SACE,eAAC,IAAD,CAAMqK,GAAG,IAAT,UACE,wBAAQrK,UAAU,kBAAlB,oBACA,wBAAQA,UAAU,oDAAoD2E,QAAS,kBAAI,EAAKpI,MAAM2T,WAAW,CAAC,EAAKxT,MAAMsE,mBAAmBmP,UAAW5N,KAAK7F,MAAMsE,gBAA9J,6BAMV,cAAC,GAAD,CAAoB+E,KAAMxD,KAAK7F,MAAMqJ,KAAMgB,OAAQxE,KAAKuD,MAAOgF,sBAAuBvI,KAAK7F,MAAMoO,+B,GAlS1D1G,aCwChCgM,G,kDA5CX,WAAY7T,GAAQ,IAAD,8BACf,cAAMA,IAYV2T,WAAa,SAAClV,GACV,EAAKiC,SAAS,CAAE+D,gBAAiBhG,IAC7BA,EAAK8B,QAAQ,EAAKG,SAAS,CAAEwM,kBAAmBzO,EAAK,GAAG6D,MAf7C,EAkBnBgQ,uBAAyB,SAACxJ,GACtB,EAAKpI,SAAS,CAAEoT,oBAAqBhL,EAAapE,KAAMoE,EAAagE,QAAShE,KAnB/D,EAsBnByC,cAAgB,SAACwI,GACb,EAAKrT,SAAS,CAAEiM,mBAAoBoH,KArBpC,EAAK5T,MAAQ,CACTsE,gBAAiB,GACjByI,kBAAmB,EACnBP,mBAAoB,UACpBmH,oBAAqB,KACrBpP,KAAM,SACNoI,QAAS,cARE,E,0CA0BnB,WACI,OACI,mCACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkH,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,GAAD,CAAQxP,gBAAiBuB,KAAK7F,MAAMsE,gBAAiB8G,cAAevF,KAAKuF,kBAE7E,cAAC,IAAD,CAAOyI,KAAK,cAAcC,OAAK,EAA/B,SACI,cAAC,GAAD,CAAmBN,WAAY3N,KAAK2N,WAAYrB,uBAAwBtM,KAAKsM,sC,GArCvFzK,aCDZqM,G,kDACF,aAAe,IAAD,8BACV,gBACKC,aAAevM,IAAMwM,YAC1B,EAAKC,WAAa,KAHR,E,wCAOd,WAEI,OADA7U,QAAQC,IAAI,uCAAuCuG,KAAKmO,aAAaG,SAC9DtO,KAAKmO,aAAaG,QAAUtO,KAAKmO,aAAaG,QAAQnU,MAAQ,I,IAGzE,SAAWU,GAGP,OAFArB,QAAQC,IAAI,QAASoB,GACrBrB,QAAQC,IAAI,aAAcuG,KAAKmO,aAAaG,SACrCtO,KAAKmO,aAAaG,QAAQ5T,SAASG,K,+BAG9C,WACImF,KAAKqO,WAAaE,SAASC,cAAc,OACzCxO,KAAKyO,YAAYzO,KAAKqO,YACtBK,IAASC,OAAO,cAAC,GAAD,CAAKC,IAAK5O,KAAKmO,eAAkBnO,KAAKqO,gB,eAtBlCQ,cA0B5BnH,OAAOoH,eAAeC,OAAO,mBAAoBb,I","file":"static/js/main.8b901b2a.chunk.js","sourcesContent":["/*********************\n * PAGINATION ********\n *********************/\n\nexport const PERPAGEOPTIONS = [5, 10, 15, 25, 50];\nexport const PAGE = 1;\nexport const PAGESIZE = 5;\nexport const TOTALITEMS = 20;\nexport const LASTPAGE = 4;\nexport const PAGEINPUT = 1;\nexport const PAGECHANGEVALUE = 1;\n\n/*********************\n * UI CONSTANT *******\n *********************/\nexport const SEARCH_CONTENT_BY_NAME = \"Search Content By Name...\";\nexport const SELECT_COLLECTION_TYPE = \"Select Collection Type\";\n\n/*********************\n * UI LABEL **********\n *********************/\nexport const SELECT = \"Select\";\nexport const NAME = \"Name\";\nexport const CREATEDBY = \"Created by\";\nexport const LASTEDITED = \"Last edited\";\nexport const CREATEDEDITED = \"Created date\";\n\nexport const T_HEADING = {\n    SELECT: SELECT,\n    NAME: NAME,\n    CREATEDBY: CREATEDBY,\n    LASTEDITED: LASTEDITED,\n    CREATEDEDITED: CREATEDEDITED,\n}\n\nexport const BTN_ADD_NEW_CONTENT = 'Add new content';\n\n/*********************\n * For Strapi API ****\n *********************/\nexport const KC_TOKEN_PREFIX = 'EntKcToken';\n\n/*********************\n * For Strapi API ****\n *********************/\nexport const UNIVERSAL_DATE_FORMAT = \"YYYY-MM-DD HH:mm:ss\"\n\n/*********************\n * For Strapi Images ****\n *********************/\n export const IMAGE_EXT = [\n    \".ase\",\n    \".art\",\n    \".bmp\",\n    \".blp\",\n    \".cd5\",\n    \".cit\",\n    \".cpt\",\n    \".cr2\",\n    \".cut\",\n    \".dds\",\n    \".dib\",\n    \".djvu\",\n    \".egt\",\n    \".exif\",\n    \".gif\",\n    \".gpl\",\n    \".grf\",\n    \".icns\",\n    \".ico\",\n    \".iff\",\n    \".jng\",\n    \".jpeg\",\n    \".jpg\",\n    \".jfif\",\n    \".jp2\",\n    \".jps\",\n    \".lbm\",\n    \".max\",\n    \".miff\",\n    \".mng\",\n    \".msp\",\n    \".nef\",\n    \".nitf\",\n    \".ota\",\n    \".pbm\",\n    \".pc1\",\n    \".pc2\",\n    \".pc3\",\n    \".pcf\",\n    \".pcx\",\n    \".pdn\",\n    \".pgm\",\n    \".PI1\",\n    \".PI2\",\n    \".PI3\",\n    \".pict\",\n    \".pct\",\n    \".pnm\",\n    \".pns\",\n    \".ppm\",\n    \".psb\",\n    \".psd\",\n    \".pdd\",\n    \".psp\",\n    \".px\",\n    \".pxm\",\n    \".pxr\",\n    \".qfx\",\n    \".raw\",\n    \".rle\",\n    \".sct\",\n    \".sgi\",\n    \".rgb\",\n    \".int\",\n    \".bw\",\n    \".tga\",\n    \".tiff\",\n    \".tif\",\n    \".vtf\",\n    \".xbm\",\n    \".xcf\",\n    \".xpm\",\n    \".3dv\",\n    \".amf\",\n    \".ai\",\n    \".awg\",\n    \".cgm\",\n    \".cdr\",\n    \".cmx\",\n    \".dxf\",\n    \".e2d\",\n    \".egt\",\n    \".eps\",\n    \".fs\",\n    \".gbr\",\n    \".odg\",\n    \".svg\",\n    \".stl\",\n    \".vrml\",\n    \".x3d\",\n    \".sxd\",\n    \".v2d\",\n    \".vnd\",\n    \".wmf\",\n    \".emf\",\n    \".art\",\n    \".xar\",\n    \".png\",\n    \".webp\",\n    \".jxr\",\n    \".hdp\",\n    \".wdp\",\n    \".cur\",\n    \".ecw\",\n    \".iff\",\n    \".lbm\",\n    \".liff\",\n    \".nrrd\",\n    \".pam\",\n    \".pcx\",\n    \".pgf\",\n    \".sgi\",\n    \".rgb\",\n    \".rgba\",\n    \".bw\",\n    \".int\",\n    \".inta\",\n    \".sid\",\n    \".ras\",\n    \".sun\",\n    \".tga\",\n    \".heic\",\n    \".heif\"\n];\n\nexport const STRAPI_IMAGE_EXTENSIONS = ['.JPEG', '.PNG', '.GIF', '.SVG', '.TIFF', '.ICO', '.DVU'];\nexport const STRAPI_IMAGE_URL_KEY = 'url';","import axios from 'axios';\nimport { KC_TOKEN_PREFIX, PAGE, PAGESIZE } from '../helper/Constant';\nconst domain = `${process.env.REACT_APP_STRAPI_API_URL}`;\nconst templateBaseUrl = `${process.env.REACT_APP_PUBLIC_API_URL}/template/`;\nconst rootAdminEndPoint = `${domain}/content-manager/collection-types/api::`;\n\nexport const postLoginAdmin = async (data) => {\n    return axios.post(`${domain}/admin/login`, data);\n}\n\n// GET Collection Type\nexport const getCollectionTypes = async () => {\n    const { data } = await axios.get(`${domain}/content-manager/content-types`, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX));\n    return data;\n}\n\nexport const getContents = async (collectionType, page = PAGE, pageSize = PAGESIZE) => {\n    let url = `${rootAdminEndPoint}${collectionType}.${collectionType}?page=${page}&pageSize=${pageSize}`;\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX));\n    return data;\n}\n\nexport const fetchContents = async (collectionType) => {\n    // const url = `${domain}/api/${collectionType}`;\n    return await getContents(collectionType);\n}\n\nexport const filterContentsByName = async (collectionType, query, searchBy, page = PAGE, pageSize = PAGESIZE) => {\n    if (!collectionType) {\n        throw new Error('collectionType is missing');\n    }\n    const url = `${rootAdminEndPoint}${collectionType}.${collectionType}?filters[${searchBy}][$containsi]=${query}&page=${page}&pageSize=${pageSize}`\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX))\n    return data;\n}\n\n\n// API to list of templates Spring-Boot API\nexport const getTemplate = async (token) => {\n    const data = await axios.get(`${templateBaseUrl}`);\n    return data;\n}\n\nconst getKeycloakToken = () => {\n    return '';\n    if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n        return window.entando.keycloak.token\n    } else {\n        return localStorage.getItem('token');\n    }\n}\n\nconst getDefaultOptions = (defaultBearer) => {\n    const token = getKeycloakToken()\n    console.log('ET-Widget-Config', token);\n    if (!token) {\n        //Below if condition is to run the strapi API in local\n        if (defaultBearer === KC_TOKEN_PREFIX) {\n            return {\n                headers: {\n                    Authorization: `Bearer ${'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjUyMDczNDg1LCJleHAiOjE2NTQ2NjU0ODV9.kInTfUH5NTauXRK2QCo8L468io5L_r2IJe4xZ614HxU'}`\n                },\n            }\n        } else {\n            return {}\n        }\n    }\n    // logic to add token for both strapi and MS api\n    return {\n        headers: {\n            Authorization: `${defaultBearer} ${token}`,\n        },\n    }\n}\n\n// Get authorization tokens\nexport const addAuthorizationRequestConfig = (config = {}, defaultBearer = 'Bearer') => {\n    let defaultOptions = getDefaultOptions(defaultBearer);\n    return {\n        ...config,\n        ...defaultOptions\n    }\n}","import classNames from 'classnames';\nimport { orderBy } from 'lodash';\nimport {\n    customHeaderFormattersDefinition,\n    defaultSortingOrder, Grid, paginate, PaginationRow,\n    PAGINATION_VIEW, selectionCellFormatter, sortableHeaderCellFormatter,\n    Table, tableCellFormatter, TABLE_SORT_DIRECTION\n} from 'patternfly-react';\nimport React from 'react';\nimport { compose } from 'react-recompose';\nimport * as sort from 'sortabular';\nimport * as resolve from 'table-resolver';\n\nconst mockRows = [\n    // {\n    //     additions: 272635,\n    //     commits: 711,\n    //     name: 'Dan',\n    //     gender: 'male',\n    //     id: 0,\n    //     eye_color: 'Blue',\n    //     location: 'London, UK',\n    //     username: 'gaearon',\n    //     state: 'UK'\n    // },\n    // {\n    //     additions: 203610,\n    //     commits: 476,\n    //     name: 'Sebastian',\n    //     gender: 'male',\n    //     id: 1,\n    //     eye_color: 'Green',\n    //     location: 'San Francisco, CA',\n    //     username: 'sebmarkbage',\n    //     state: 'UK'\n    // },\n    // {\n    //     additions: 114467,\n    //     commits: 828,\n    //     name: 'Sophie',\n    //     gender: 'female',\n    //     id: 2,\n    //     eye_color: 'Grey',\n    //     location: 'California',\n    //     username: 'sophiebits',\n    //     state: 'UK'\n    // },\n    // {\n    //     additions: 114467,\n    //     commits: 828,\n    //     name: 'Vijay',\n    //     gender: 'male',\n    //     id: 3,\n    //     eye_color: 'dark brown',\n    //     location: 'California',\n    //     username: 'sophiebits',\n    //     state: 'UK'\n    // },\n    // {\n    //     additions: 114467,\n    //     commits: 828,\n    //     name: 'Sachin',\n    //     gender: 'male',\n    //     id: 4,\n    //     eye_color: 'dark brown',\n    //     location: 'California',\n    //     username: 'sophiebits',\n    //     state: 'UK'\n    // },\n    // {\n    //     additions: 114467,\n    //     commits: 828,\n    //     name: 'Kamlesh',\n    //     gender: 'male',\n    //     id: 5,\n    //     eye_color: 'White',\n    //     location: 'California',\n    //     username: 'sophiebits',\n    //     state: 'UK'\n    // },\n    // {\n    //     additions: 114467,\n    //     commits: 828,\n    //     name: 'Tushar',\n    //     gender: 'male',\n    //     id: 6,\n    //     eye_color: 'Gold',\n    //     location: 'California',\n    //     username: 'sophiebits',\n    //     state: 'UK'\n    // }\n]\n\nexport class MockClientPaginationTable extends React.Component {\n    static selectRow(row) {\n        return Object.assign({}, row, { selected: true });\n    }\n    static deselectRow(row) {\n        return Object.assign({}, row, { selected: false });\n    }\n\n    constructor(props) {\n        super(props);\n\n        const getSortingColumns = () => this.state.sortingColumns || {};\n\n        const sortableTransform = sort.sort({\n            getSortingColumns,\n            onSort: selectedColumn => {\n                this.setState({\n                    sortingColumns: sort.byColumn({\n                        sortingColumns: this.state.sortingColumns,\n                        sortingOrder: defaultSortingOrder,\n                        selectedColumn\n                    })\n                });\n            },\n            // Use property or index dependening on the sortingColumns structure specified\n            strategy: sort.strategies.byProperty\n        });\n\n        const sortingFormatter = sort.header({\n            sortableTransform,\n            getSortingColumns,\n            strategy: sort.strategies.byProperty\n        });\n\n        // enables our custom header formatters extensions to reactabular\n        this.customHeaderFormatters = customHeaderFormattersDefinition;\n\n        this.state = {\n            // selectedContent \n            selectedContent: [],\n\n            // Sort the first column in an ascending way by default.\n            sortingColumns: {\n                name: {\n                    direction: TABLE_SORT_DIRECTION.ASC,\n                    position: 0\n                }\n            },\n\n            // column definitions\n            columns: [\n                {\n                    property: 'select',\n                    displayName: 'Select',\n                    header: {\n                        label: 'select',\n                        props: {\n                            index: 0,\n                            rowSpan: 1,\n                            colSpan: 1,\n                            id: 'select'\n                        },\n                        transforms: [sortableTransform],\n                        formatters: [sortingFormatter],\n                        customFormatters: [sortableHeaderCellFormatter]\n                        // customFormatters: [selectionHeaderCellFormatter]\n                    },\n                    cell: {\n                        props: {\n                            index: 0\n                        },\n                        formatters: [\n                            (value, { rowData, rowIndex }) => {\n                                return selectionCellFormatter(\n                                    { rowData, rowIndex },\n                                    this.onSelectRow,\n                                    `vybrat ${rowIndex}`, `vyberte řádek ${rowIndex}`\n                                );\n                            }\n                        ]\n                    }\n                },\n                {\n                    property: 'Title',\n                    displayName: 'Names',\n                    header: {\n                        label: 'Name',\n                        props: {\n                            index: 1,\n                            rowSpan: 1,\n                            colSpan: 1\n                        },\n                        transforms: [sortableTransform],\n                        formatters: [sortingFormatter],\n                        customFormatters: [sortableHeaderCellFormatter]\n                    },\n                    cell: {\n                        props: {\n                            index: 1\n                        },\n                        formatters: [tableCellFormatter]\n                    }\n                },\n                {\n                    property: 'createdBy',\n                    header: {\n                        label: 'Created by',\n                        props: {\n                            index: 2,\n                            rowSpan: 1,\n                            colSpan: 1\n                        },\n                        transforms: [sortableTransform],\n                        formatters: [sortingFormatter],\n                        customFormatters: [sortableHeaderCellFormatter]\n                    },\n                    cell: {\n                        props: {\n                            index: 2\n                        },\n                        formatters: [tableCellFormatter]\n                    }\n                },\n                {\n                    property: 'updatedAt',\n                    header: {\n                        label: 'Last edited',\n                        props: {\n                            index: 3,\n                            rowSpan: 1,\n                            colSpan: 1\n                        },\n                        transforms: [sortableTransform],\n                        formatters: [sortingFormatter],\n                        customFormatters: [sortableHeaderCellFormatter]\n                    },\n                    cell: {\n                        props: {\n                            index: 3\n                        },\n                        formatters: [tableCellFormatter]\n                    }\n                },\n                {\n                    property: 'Type',\n                    header: {\n                        label: 'Type',\n                        props: {\n                            index: 4,\n                            rowSpan: 1,\n                            colSpan: 1\n                        },\n                        transforms: [sortableTransform],\n                        formatters: [sortingFormatter],\n                        customFormatters: [sortableHeaderCellFormatter]\n                    },\n                    cell: {\n                        props: {\n                            index: 4\n                        },\n                        formatters: [tableCellFormatter]\n                    }\n                },\n                {\n                    property: 'createdAt',\n                    header: {\n                        label: 'Created date',\n                        props: {\n                            index: 5,\n                            rowSpan: 1,\n                            colSpan: 1\n                        },\n                        transforms: [sortableTransform],\n                        formatters: [sortingFormatter],\n                        customFormatters: [sortableHeaderCellFormatter]\n                    },\n                    cell: {\n                        props: {\n                            index: 5\n                        },\n                        formatters: [tableCellFormatter]\n                    }\n                },\n                {\n                    property: 'status',\n                    header: {\n                        label: 'Status',\n                        props: {\n                            index: 6,\n                            rowSpan: 1,\n                            colSpan: 1\n                        },\n                        transforms: [sortableTransform],\n                        formatters: [sortingFormatter],\n                        customFormatters: [sortableHeaderCellFormatter]\n                    },\n                    cell: {\n                        props: {\n                            index: 6\n                        },\n                        formatters: [tableCellFormatter]\n                    }\n                }\n                // {\n                //     property: 'actions',\n                //     header: {\n                //         label: 'Actions',\n                //         props: {\n                //             index: 7,\n                //             rowSpan: 1,\n                //             colSpan: 2\n                //         },\n                //         formatters: [actionHeaderCellFormatter]\n                //     },\n                //     cell: {\n                //         props: {\n                //             index: 7\n                //         },\n                //         formatters: [\n                //             (value, { rowData }) => {\n                //                 // console.log(\"npm i react-recompose\", rowData);\n                //                 return [\n                //                     <Table.Actions key=\"0\">\n                //                         <Table.Button\n                //                             onClick={() => alert('clicked ' + rowData.name)}\n                //                         >\n                //                             Actions\n                //                         </Table.Button>\n                //                     </Table.Actions>,\n                //                     <Table.Actions key=\"1\">\n                //                         <Table.DropdownKebab id=\"myKebab\" pullRight>\n                //                             <MenuItem>Action</MenuItem>\n                //                             <MenuItem>Another Action</MenuItem>\n                //                             <MenuItem>Something else here</MenuItem>\n                //                             <MenuItem divider />\n                //                             <MenuItem>Separated link</MenuItem>\n                //                         </Table.DropdownKebab>\n                //                     </Table.Actions>\n                //                 ];\n                //             }\n                //         ]\n                //     }\n                // }\n            ],\n\n            // rows and row selection state\n            rows: this.props.mockRows,\n            \n            // const [reloadToken, setReloadToken] = useState(((new Date()).getTime()).toString())\n\n            selectedRows: [],\n\n            // pagination default states\n            pagination: {\n                page: 1,\n                perPage: 6,\n                perPageOptions: [6, 10, 15]\n            },\n\n            // page input value\n            pageChangeValue: 1\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.mockRows) {\n            this.setState({ rows: this.props.mockRows })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.mockRows !== prevProps.mockRows)\n            this.setState({ rows: this.props.mockRows })\n    }\n\n    totalPages = () => {\n        const { perPage } = this.state.pagination;\n        return Math.ceil(mockRows.length / perPage);\n    };\n    onPageInput = e => {\n        this.setState({ pageChangeValue: e.target.value });\n    };\n    onSubmit = () => {\n        this.setPage(this.state.pageChangeValue);\n    };\n    setPage = value => {\n        const page = Number(value);\n        if (\n            !Number.isNaN(value) &&\n            value !== '' &&\n            page > 0 &&\n            page <= this.totalPages()\n        ) {\n            let newPaginationState = Object.assign({}, this.state.pagination);\n            newPaginationState.page = page;\n            this.setState({ pagination: newPaginationState, pageChangeValue: page });\n        }\n    }\n    onPerPageSelect = (eventKey, e) => {\n        let newPaginationState = Object.assign({}, this.state.pagination);\n        newPaginationState.perPage = eventKey;\n        newPaginationState.page = 1;\n        this.setState({ pagination: newPaginationState });\n    };\n    onFirstPage = () => {\n        this.setPage(1);\n    };\n    onPreviousPage = () => {\n        if (this.state.pagination.page > 1) {\n            this.setPage(this.state.pagination.page - 1);\n        }\n    };\n    onNextPage = () => {\n        const { page } = this.state.pagination;\n        if (page < this.totalPages()) {\n            this.setPage(this.state.pagination.page + 1);\n        }\n    };\n    onLastPage = () => {\n        const { page } = this.state.pagination;\n        const totalPages = this.totalPages();\n        if (page < totalPages) {\n            this.setPage(totalPages);\n        }\n    };\n    onSelectRow = (event, row) => {\n        const { onRowsLogger } = this.props;\n        const { rows, selectedRows } = this.state;\n        const selectedRowIndex = rows.findIndex(r => r.id === row.id);\n        if (selectedRowIndex > -1) {\n            let updatedSelectedRows, updatedRow;\n            if (row.selected) {\n                updatedSelectedRows = selectedRows.filter(r => !(r === row.id));\n                updatedRow = MockClientPaginationTable.deselectRow(row);\n            } else {\n                selectedRows.push(row.id);\n                updatedSelectedRows = selectedRows;\n                updatedRow = MockClientPaginationTable.selectRow(row);\n            }\n            rows[selectedRowIndex] = updatedRow;\n            this.setState({\n                rows: rows,\n                selectedRows: updatedSelectedRows\n            });\n            onRowsLogger(rows.filter(r => r.selected));\n        }\n    };\n    onSelectAllRows = event => {\n        const { onRowsLogger } = this.props;\n        const { rows, selectedRows } = this.state;\n        const checked = event.target.checked;\n        const currentRows = this.currentRows().rows;\n\n        if (checked) {\n            const updatedSelections = [\n                ...new Set([...currentRows.map(r => r.id), ...selectedRows])\n            ];\n            const updatedRows = rows.map(r => {\n                return updatedSelections.indexOf(r.id) > -1 ? MockClientPaginationTable.selectRow(r) : r;\n            });\n            this.setState({\n                // important: you must update rows to force a re-render and trigger onRow hook\n                rows: updatedRows,\n                selectedRows: updatedSelections\n            });\n            onRowsLogger(updatedRows.filter(r => r.selected));\n        } else {\n            const ids = currentRows.map(r => r.id);\n            const updatedSelections = selectedRows.filter(r => {\n                return !(ids.indexOf(r) > -1);\n            });\n            const updatedRows = rows.map(r => {\n                return updatedSelections.indexOf(r.id) > -1 ? r : MockClientPaginationTable.deselectRow(r);\n            });\n            this.setState({\n                rows: updatedRows,\n                selectedRows: updatedSelections\n            });\n            onRowsLogger(updatedRows.filter(r => r.selected));\n        }\n    };\n    currentRows() {\n        const { rows, sortingColumns, columns, pagination } = this.state;\n        return compose(\n            paginate(pagination),\n            sort.sorter({\n                columns: columns,\n                sortingColumns,\n                sort: orderBy,\n                strategy: sort.strategies.byProperty\n            })\n        )(rows);\n    }\n    // TODO:\n    onRow = (row, { rowIndex }) => {\n        // IMP: Need to figure it out\n        // const { selectedRows } = this.state;\n        // IMP: For now remove later\n        this.props.setSelectedContent([row], this.props.selectedCollectionType)\n        // this.setState({ selectedContent: [row] });\n        const selectedRows = mockRows\n\n        const selected = selectedRows.indexOf(row.id) > -1;\n        return {\n            className: classNames({ selected: selected }),\n            role: 'row'\n        };\n    }\n    render() {\n        const { columns, pagination, sortingColumns, pageChangeValue } = this.state;\n        const sortedPaginatedRows = this.currentRows();\n\n        return (\n            <Grid fluid>\n                <Table.PfProvider\n                    striped\n                    bordered\n                    hover\n                    dataTable\n                    columns={columns}\n                    components={{\n                        header: {\n                            cell: cellProps => {\n                                return this.customHeaderFormatters({\n                                    cellProps,\n                                    columns,\n                                    sortingColumns,\n                                    rows: sortedPaginatedRows.rows,\n                                    onSelectAllRows: this.onSelectAllRows\n                                });\n                            }\n                        }\n                    }}\n                >\n                    <Table.Header headerRows={resolve.headerRows({ columns })} />\n                    <Table.Body\n                        rows={sortedPaginatedRows.rows}\n                        rowKey=\"id\"\n                        onRow={this.onRow}\n                    />\n                </Table.PfProvider>\n                <PaginationRow\n                    viewType={PAGINATION_VIEW.TABLE}\n                    pagination={pagination}\n                    pageInputValue={pageChangeValue}\n                    amountOfPages={sortedPaginatedRows.amountOfPages}\n                    itemCount={sortedPaginatedRows.itemCount}\n                    itemsStart={sortedPaginatedRows.itemsStart}\n                    itemsEnd={sortedPaginatedRows.itemsEnd}\n                    onPerPageSelect={this.onPerPageSelect}\n                    onFirstPage={this.onFirstPage}\n                    onPreviousPage={this.onPreviousPage}\n                    onPageInput={this.onPageInput}\n                    onNextPage={this.onNextPage}\n                    onLastPage={this.onLastPage}\n                    onSubmit={this.onSubmit}\n                />\n            </Grid>\n        );\n    }\n}\n\n// MockClientPaginationTable.propTypes = {\n//     onRowsLogger: PropTypes.func.isRequired\n// };\n\n","import React from \"react\";\n\nclass ExpandCollapse extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            values: {\n                name: ''\n            }\n        };\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.runOnFilterData(this.state.values.name);\n    };\n\n    handleInputChange = (event) => {\n        this.setState({\n            values: { [event.target.name]: event.target.value },\n        });\n    };\n\n    onClick = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n    handleKeyDown() {\n\n    }\n\n    render() {\n        return (\n            <div\n                className=\"ContentsFilter well\"\n                role=\"button\"\n                tabIndex={0}\n                style={{ margin: '1rem 0rem' }}\n            >\n                <form onSubmit={this.handleSubmit}>\n                    <div style={{ display: 'flex', margin: '1rem 0rem' }}>\n                        <button id=\"dropdown-example\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" type=\"button\" className=\"dropdown-toggle btn btn-default\">Name <span className=\"caret\"></span></button>\n                        <input\n                            type=\"search\"\n                            name=\"name\"\n                            value={this.state.values.name}\n                            onChange={this.handleInputChange}\n                            role=\"combobox\"\n                            className=\"rbt-input-main form-control rbt-input\"\n                            placeholder=\"Search Content\"\n                        />\n                    </div>\n                    <div className=\"pull-right mbt10\" style={{ margin: \"0 0 10px 0\" }} >\n                        <button className=\"btn btn-primary\">Search</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ExpandCollapse;\n\n// <span className={`icon fa fa-chevron-${true ? 'down' : 'right'} CollapsibleSection__title-collapse-button`} />","import { Button, Col, Row, Modal, Icon } from 'patternfly-react';\nimport React, { Component, Fragment } from 'react'\nimport { fetchContents, filterContentsByName, getCollectionTypes } from '../api/Api'\nimport { MockClientPaginationTable } from '../MockClientPaginationTable'\nimport ExpandCollapse from './ExpandCollapse'\nimport './MockModalManager.css'\n\nexport default class MockModalManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { show: false, collectionTypes: [], mockRows: [], selectedContent: [], selectedCollectionType: null };\n    }\n\n    // TODO: mockRows\n    runOnFilterData = async (contentName) => {\n        await filterContentsByName(this.state.selectedCollectionType, contentName).then(response => {\n            const arr = response.data.data.map(el => {\n                el.attributes.id = el.id\n                el.attributes.createdBy = 'Admin';\n                el.attributes.status = 'Published';\n                return el.attributes\n            })\n            this.setState({ mockRows: arr });\n        });\n    }\n\n    componentDidMount = () => {\n    }\n\n    close = () => {\n        this.setState({ show: false })\n    }\n\n    open = async () => {\n        this.setState({ show: true })\n\n        let contentTypes = await getCollectionTypes();\n        contentTypes = contentTypes.data.data.filter(obj => {\n            return obj && (obj.uid && obj.uid.startsWith(\"api::\")) && obj.isDisplayed;\n        });\n        const contentTypeRefine = [];\n        contentTypes.length && contentTypes.forEach(element => {\n            contentTypeRefine.push(element.info)\n        });\n        this.setState({ collectionTypes: contentTypeRefine })\n    }\n\n    collectionTypeOnChange = (e) => {\n        e.persist()\n        this.state.collectionTypes.forEach(async (el) => {\n            if (el.singularName === e.target.value && e.target.value) {\n                this.setState({ selectedCollectionType: el.pluralName })\n                await fetchContents(el.pluralName).then(response => {\n                    const arr = response.data.data.map(el => {\n                        el.attributes.id = el.id\n                        el.attributes.createdBy = 'Admin';\n                        el.attributes.status = 'Published';\n                        // el.attributes.type = el.singularName;\n                        return el.attributes\n                    })\n                    this.setState({ mockRows: arr });\n                });\n            }\n        })\n    }\n\n    render() {\n        // TODO:\n        return (\n            <Fragment>\n                <div>\n                    {/* TODO: Add existing content need to beremoved later */}\n                {/* <div className=\"row\" style={{marginLeft: \"0px\", marginRight: \"0px\"}}>\n                    <Col xs={6}>\n                        <h3 className=\"SingleContentConfigFormBody__contentTitle\">\n                            Content: -\n                        </h3>\n                    </Col>\n                    <Col xs={6} className=\"SingleContentConfigFormBody__addButtons\">\n                        <Button\n                            className=\"ChooseContentBody__add--existing app-tour-step-18\"\n                            bsStyle=\"primary\"\n                            onClick={this.open}\n                        >\n                            Add existing content\n                        </Button>\n                    </Col>\n                </div> */}\n                <Modal dialogClassName=\"ContentsFilterModal\" show={this.state.show} onHide={this.close}>\n                    <Modal.Header>\n                        <button\n                            className=\"close\"\n                            onClick={this.close}\n                            aria-hidden=\"true\"\n                            aria-label=\"Close\"\n                        >\n                            <Icon type=\"pf\" name=\"close\" />\n                        </button>\n                        <Modal.Title>Select one content item</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div\n                            className=\"CollapsibleSection__title no-padding\"\n                            // onClick={onClick}\n                            // onKeyDown={handleKeyDown}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            {/* {<span>{name}</span> || (\n                                <FormattedMessage id={nameId} defaultMessage=\"Info\" />\n                            )} */}\n\n                        </div>\n                        <Row>\n                            <label className=\"control-label col-xs-3\" htmlFor=\"group\">\n                                {/* <FormattedMessage id=\"user.authority.groups\" /> */}Collection Type\n                            </label>\n                            <Col xs={9}>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"group\"\n                                    data-testid={\"TEST_ID_USER_AUTHORITY_MODAL.GROUP_FIELD\"}\n                                    onChange={this.collectionTypeOnChange}\n                                >\n                                    <option value={0}>Select Collection Type</option>\n                                    {\n                                        this.state.collectionTypes.length && this.state.collectionTypes.map((collectionType, idx) => {\n                                            return (\n                                                <option key={collectionType.singularName} value={collectionType.singularName}>{collectionType.pluralName}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </Col>\n                        </Row>\n                        <ExpandCollapse runOnFilterData={this.runOnFilterData} />\n\n                        {/* </FormGroup> */}\n                        <MockClientPaginationTable\n                            onRowsLogger={function noRefCheck() { }}\n                            mockRows={this.state.mockRows}\n                            selectedCollectionType={this.state.selectedCollectionType}\n                            setSelectedContent={this.props.setSelectedContent}\n                            />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button\n                            bsStyle=\"default\"\n                            className=\"btn-cancel\"\n                            onClick={this.close}\n                            >\n                            Cancel\n                        </Button>\n                        <Button bsStyle=\"primary\" onClick={this.close}>\n                            Choose\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                            </div>\n            </Fragment>\n        )\n    }\n}\n","import React from \"react\";\nimport moment from 'moment';\nimport { UNIVERSAL_DATE_FORMAT } from \"../helper/Constant\";\n\nexport class SimpleTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // DATA STATE\n            templateType: [{'label': 'vj'}],\n            selectedTemplateType: [],\n        }\n    }\n\n    /**\n       * Renders Button on Typehead.\n       * @returns Button element\n       */\n    renderToggleButton = ({ isMenuShown, onClick }) => (\n        <button\n            type=\"button\"\n            style={{ position: \"absolute\", height: \"100%\", top: \"0px\", right: \"0px\", border: \"1px solid lightgray\" }}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n        ><span className=\"fa fa-angle-down\"></span></button>\n    );\n\n    onChangeTemplateId = (e) => {\n        this.props.setTemplateId(e.target.value);\n    }\n\n    render() {\n        return (\n            <>\n                <table className=\"table table-bordered table-datatable table-hover table-striped Contents__table-element\">\n                    <thead>\n                        <tr>\n                            {Object.keys(contentAttribute).map((item, idx) => <th key={idx}>{contentAttribute[item]}</th>)}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.selectedContent.length > 0 && (\n                                this.props.selectedContent.map(item => {\n                                    return (\n                                        <tr key={item.id}>\n                                            <td>{item[Object.keys(item)[1]]}</td>\n                                            <td>{`${item.createdBy.firstname} ${item.createdBy.lastname}`}</td>\n                                            <td>{moment(new Date(item.updatedAt)).format(UNIVERSAL_DATE_FORMAT)}</td>\n                                            <td>{moment(new Date(item.publishedAt)).format(UNIVERSAL_DATE_FORMAT)}</td>\n                                            <td>\n                                                <select name=\"modelId\" className=\"form-control\" onChange={this.onChangeTemplateId}>\n                                                    <option value=\"1\">Select Template\n                                                    </option>\n                                                    {this.props.templateList.map((el) => {\n                                                        return <option key={el.id} value={el.id}>{el.templateName}</option>;\n                                                    })}\n                                                </select>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            )\n                        }\n                    </tbody>\n                </table>\n            </>\n        );\n\n    }\n}\n\n\nconst contentAttribute = {\n    Title: \"Name\",\n    createdAt: \"Created by\",\n    updatedAt: \"Last edited\",\n    createDate: \"Created date\",\n    selectDefaultTemplate: \"Select default template *\"\n    // restirctions: \"Restrictions\"\n}","import React, { Component } from 'react'\nimport {\n    Grid,\n    Row,\n    Col,\n    Button\n} from 'patternfly-react';\nimport MockModalManager from '../ui/MockModalManager';\nimport { SimpleTable } from '../ui/SimpleTable';\nimport { getCollectionTypes, getTemplate } from '../api/Api';\nimport { Link } from 'react-router-dom';\nimport { BTN_ADD_NEW_CONTENT } from '../helper/Constant';\nconst strapiDomain = `${process.env.REACT_APP_STRAPI_TARGET_URL}`;\n\nexport default class Config extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedContent: [],\n            name: null,\n            nameTwo: null,\n            collectionTypes: [],\n            selectedContentId: 0,\n            selectedTemplateId: 'default',\n            templateList: []\n        };\n        this.handleAddNewContent = this.handleAddNewContent.bind(this);\n    }\n\n    onChangeTemplateId = (event) => {\n        this.setState({ selectedTemplateId: event.target.value })\n    }\n\n    setSelectedContent = (selectedContentArr, selectedContenttype) => {\n        this.setState({ selectedContent: selectedContentArr })\n        this.setState({ name: selectedContentArr })\n        this.setState({ nameTwo: encodeURIComponent(JSON.stringify(selectedContentArr)) })\n        this.setState({ selectedContentId: selectedContentArr[0].id })\n    }\n\n    handleTypeaheadChangeContentType = selected => {\n        let selectedContentType = selected.map(option => option.label);\n        this.setState({ templateList: selectedContentType });\n    };\n\n    componentDidMount = async () => {\n        let contentTypes = await getCollectionTypes();\n        contentTypes = contentTypes.data.filter(obj => {\n            return obj && (obj.uid && obj.uid.startsWith(\"api::\")) && obj.isDisplayed;\n        });\n        const contentTypeRefine = [];\n        contentTypes.length && contentTypes.forEach(element => {\n            contentTypeRefine.push({ label: element.info.pluralName })\n        });\n        let { data: templatesList } = await getTemplate();\n        this.setState({ templateList: templatesList, collectionTypes: templatesList })\n    }\n\n     /**\n     * Navigate to Strapi dashboard/login page in a new tab on browser\n     */\n      handleAddNewContent = () => {\n        let strapiContentManagerUrl = `${strapiDomain}/admin/content-manager`;\n        var newWindow = window.open(strapiContentManagerUrl, '_blank');\n        if(newWindow) {\n            newWindow.focus();\n        }\n    }\n\n    render() {\n        return (\n            <form className=\"form-horizontal SingleContentConfigForm well\">\n                <Row>\n                    <Col xs={12}>\n                        <div>\n                            <div>\n                                <span className=\"icon fa fa-puzzle-piece\" title=\"Widget\" />\n                                <h5 className=\"SingleContentConfigFormBody__widgetTitle\">Content</h5>\n                                <div className=\"SectionTitle SectionTitle__non-collapsable\" role=\"button\">\n                                    <span>Info</span>\n                                </div>\n                                <div className=\"row\">\n                                    <Col xs={6}>\n                                        <h3 className=\"SingleContentConfigFormBody__contentTitle\">\n                                            Content: -\n                                        </h3>\n                                    </Col>\n                                    <Col xs={6} className=\"SingleContentConfigFormBody__addButtons\">\n                                        <Link to=\"/configpage\">\n                                            <Button bsStyle=\"primary\">\n                                                {this.props.selectedContent.length ? 'Edit' : 'Add existing'} content\n                                            </Button>\n                                        </Link>\n                                        <Button className=\"AddContentTypeFormBody__save--btn\" bsStyle=\"primary\" onClick={this.handleAddNewContent}>\n                                            {BTN_ADD_NEW_CONTENT}\n                                        </Button>\n                                    </Col>\n                                </div>\n                                <MockModalManager rightSide={false} setSelectedContent={this.setSelectedContent} />\n                                <div style={{ marginTop: \"1rem\" }}></div>\n                                <SimpleTable setTemplateId={this.props.setTemplateId} templateList={this.state.templateList} content={this.state.selectedContent} selectedContent={this.props.selectedContent} />\n                                {/* {\n                                    this.state.selectedContentId != 0 &&\n                                    <div style={{ marginTop: \"1rem\" }}>\n                                        <select name=\"modelId\" className=\"form-control\" onChange={this.onChangeTemplateId}>\n                                            <option value=\"default\">Default\n                                            </option>\n                                            {this.state.templatesList.map((el, idx) => {\n                                                if (el.collectiontype.toLowerCase() === this.state.name[0].Type.toLowerCase()) {\n                                                    return <option key={idx} value={el.code}>{el.templatename}</option>;\n                                                }\n                                            })}\n                                        </select>\n                                    </div>\n                                } */}\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </form>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Button, Col, Icon, Modal, Tab, Tabs} from 'patternfly-react';\nimport { PanelGroup, Panel, Row } from 'react-bootstrap';\nimport { STRAPI_IMAGE_EXTENSIONS, STRAPI_IMAGE_URL_KEY } from '../helper/Constant';\n// import { Accordion, Card } from 'react-bootstrap';\n\nconst tempData = {\n    \"blankObj\": {},\n    \"id\": 1,\n    \"name\": \"Kamlesh\",\n    \"createdAt\": \"2022-05-12T05:00:52.450Z\",\n    \"updatedAt\": \"2022-05-12T14:30:35.916Z\",\n    \"publishedAt\": \"2022-05-12T05:01:38.750Z\",\n    \"address\": {\n      \"id\": 1,\n      \"permanent_address\": \"Bhopal\",\n      \"temporary_address\": \"nagpur\",\n      \"address_line1\": {\n        \"id\": 1,\n        \"postal_code\": \"460661\",\n        \"street\": \"Village chilhati\",\n        \"city\": \"Betul\",\n        \"address\": {\n          \"id\": 1,\n          \"permanent_address\": \"Bhopal\",\n          \"temporary_address\": \"nagpur\",\n          \"address_line1\": {\n            \"id\": 1,\n            \"postal_code\": \"460661\",\n            \"street\": \"Village chilhati\",\n            \"city\": \"Betul\"\n          }\n        }\n      },\n      \"address_dynamiczone\": [\n        {\n          \"__component\": \"address.address-component\",\n          \"id\": 2,\n          \"permanent_address\": \"Bhopal\",\n          \"temporary_address\": \"Nagpur\",\n          \"address_line1\": {\n            \"id\": 2,\n            \"postal_code\": \"111111\",\n            \"street\": \"street1\",\n            \"city\": \"Mumbai\"\n          }\n        }\n      ],\n      \"address_dynamiczone2\": [\n        \n      ],\n      \"photo\": {\n        \"id\": 1,\n        \"name\": \"WhatsApp Image 2022-04-01 at 19.29.37 (1).jpeg\",\n        \"alternativeText\": \"WhatsApp Image 2022-04-01 at 19.29.37 (1).jpeg\",\n        \"caption\": \"WhatsApp Image 2022-04-01 at 19.29.37 (1).jpeg\",\n        \"width\": 1200,\n        \"height\": 1600,\n        \"formats\": {\n          \"large\": {\n            \"ext\": \".jpeg\",\n            \"url\": \"/uploads/large_Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0.jpeg\",\n            \"hash\": \"large_Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0\",\n            \"mime\": \"image/jpeg\",\n            \"name\": \"large_WhatsApp Image 2022-04-01 at 19.29.37 (1).jpeg\",\n            \"path\": null,\n            \"size\": 81.68,\n            \"width\": 750,\n            \"height\": 1000\n          },\n          \"small\": {\n            \"ext\": \".jpeg\",\n            \"url\": \"/uploads/small_Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0.jpeg\",\n            \"hash\": \"small_Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0\",\n            \"mime\": \"image/jpeg\",\n            \"name\": \"small_WhatsApp Image 2022-04-01 at 19.29.37 (1).jpeg\",\n            \"path\": null,\n            \"size\": 30.85,\n            \"width\": 375,\n            \"height\": 500\n          },\n          \"medium\": {\n            \"ext\": \".jpeg\",\n            \"url\": \"/uploads/medium_Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0.jpeg\",\n            \"hash\": \"medium_Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0\",\n            \"mime\": \"image/jpeg\",\n            \"name\": \"medium_WhatsApp Image 2022-04-01 at 19.29.37 (1).jpeg\",\n            \"path\": null,\n            \"size\": 54.61,\n            \"width\": 563,\n            \"height\": 750\n          },\n          \"thumbnail\": {\n            \"ext\": \".jpeg\",\n            \"url\": \"/uploads/thumbnail_Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0.jpeg\",\n            \"hash\": \"thumbnail_Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0\",\n            \"mime\": \"image/jpeg\",\n            \"name\": \"thumbnail_WhatsApp Image 2022-04-01 at 19.29.37 (1).jpeg\",\n            \"path\": null,\n            \"size\": 5.27,\n            \"width\": 117,\n            \"height\": 156\n          }\n        },\n        \"hash\": \"Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0\",\n        \"ext\": \".jpeg\",\n        \"mime\": \"image/jpeg\",\n        \"size\": 132.45,\n        \"url\": \"/uploads/Whats_App_Image_2022_04_01_at_19_29_37_1_a2b9584ab0.jpeg\",\n        \"previewUrl\": null,\n        \"provider\": \"local\",\n        \"provider_metadata\": null,\n        \"createdAt\": \"2022-05-12T14:30:04.347Z\",\n        \"updatedAt\": \"2022-05-12T14:30:04.347Z\"\n      },\n      \"gallery\": [\n        {\n          \"id\": 2,\n          \"name\": \"WhatsApp Image 2022-04-01 at 19.29.37.jpeg\",\n          \"alternativeText\": \"WhatsApp Image 2022-04-01 at 19.29.37.jpeg\",\n          \"caption\": \"WhatsApp Image 2022-04-01 at 19.29.37.jpeg\",\n          \"width\": 1200,\n          \"height\": 1600,\n          \"formats\": {\n            \"large\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/large_Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2.jpeg\",\n              \"hash\": \"large_Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"large_WhatsApp Image 2022-04-01 at 19.29.37.jpeg\",\n              \"path\": null,\n              \"size\": 74.86,\n              \"width\": 750,\n              \"height\": 1000\n            },\n            \"small\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/small_Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2.jpeg\",\n              \"hash\": \"small_Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"small_WhatsApp Image 2022-04-01 at 19.29.37.jpeg\",\n              \"path\": null,\n              \"size\": 26.6,\n              \"width\": 375,\n              \"height\": 500\n            },\n            \"medium\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/medium_Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2.jpeg\",\n              \"hash\": \"medium_Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"medium_WhatsApp Image 2022-04-01 at 19.29.37.jpeg\",\n              \"path\": null,\n              \"size\": 48.59,\n              \"width\": 563,\n              \"height\": 750\n            },\n            \"thumbnail\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/thumbnail_Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2.jpeg\",\n              \"hash\": \"thumbnail_Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"thumbnail_WhatsApp Image 2022-04-01 at 19.29.37.jpeg\",\n              \"path\": null,\n              \"size\": 4.34,\n              \"width\": 117,\n              \"height\": 156\n            }\n          },\n          \"hash\": \"Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2\",\n          \"ext\": \".jpeg\",\n          \"mime\": \"image/jpeg\",\n          \"size\": 123.78,\n          \"url\": \"/uploads/Whats_App_Image_2022_04_01_at_19_29_37_61dc2617d2.jpeg\",\n          \"previewUrl\": null,\n          \"provider\": \"local\",\n          \"provider_metadata\": null,\n          \"createdAt\": \"2022-05-12T14:30:30.557Z\",\n          \"updatedAt\": \"2022-05-12T14:30:30.557Z\"\n        },\n        {\n          \"id\": 3,\n          \"name\": \"WhatsApp Image 2022-04-01 at 19.29.31.jpeg\",\n          \"alternativeText\": \"WhatsApp Image 2022-04-01 at 19.29.31.jpeg\",\n          \"caption\": \"WhatsApp Image 2022-04-01 at 19.29.31.jpeg\",\n          \"width\": 1200,\n          \"height\": 1600,\n          \"formats\": {\n            \"large\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/large_Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6.jpeg\",\n              \"hash\": \"large_Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"large_WhatsApp Image 2022-04-01 at 19.29.31.jpeg\",\n              \"path\": null,\n              \"size\": 121.28,\n              \"width\": 750,\n              \"height\": 1000\n            },\n            \"small\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/small_Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6.jpeg\",\n              \"hash\": \"small_Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"small_WhatsApp Image 2022-04-01 at 19.29.31.jpeg\",\n              \"path\": null,\n              \"size\": 36.83,\n              \"width\": 375,\n              \"height\": 500\n            },\n            \"medium\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/medium_Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6.jpeg\",\n              \"hash\": \"medium_Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"medium_WhatsApp Image 2022-04-01 at 19.29.31.jpeg\",\n              \"path\": null,\n              \"size\": 74.74,\n              \"width\": 563,\n              \"height\": 750\n            },\n            \"thumbnail\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/thumbnail_Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6.jpeg\",\n              \"hash\": \"thumbnail_Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"thumbnail_WhatsApp Image 2022-04-01 at 19.29.31.jpeg\",\n              \"path\": null,\n              \"size\": 4.67,\n              \"width\": 117,\n              \"height\": 156\n            }\n          },\n          \"hash\": \"Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6\",\n          \"ext\": \".jpeg\",\n          \"mime\": \"image/jpeg\",\n          \"size\": 207.18,\n          \"url\": \"/uploads/Whats_App_Image_2022_04_01_at_19_29_31_d4679363f6.jpeg\",\n          \"previewUrl\": null,\n          \"provider\": \"local\",\n          \"provider_metadata\": null,\n          \"createdAt\": \"2022-05-12T14:30:30.560Z\",\n          \"updatedAt\": \"2022-05-12T14:30:30.560Z\"\n        },\n        {\n          \"id\": 4,\n          \"name\": \"WhatsApp Image 2022-04-01 at 19.29.36.jpeg\",\n          \"alternativeText\": \"WhatsApp Image 2022-04-01 at 19.29.36.jpeg\",\n          \"caption\": \"WhatsApp Image 2022-04-01 at 19.29.36.jpeg\",\n          \"width\": 1200,\n          \"height\": 1600,\n          \"formats\": {\n            \"large\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/large_Whats_App_Image_2022_04_01_at_19_29_36_99da767410.jpeg\",\n              \"hash\": \"large_Whats_App_Image_2022_04_01_at_19_29_36_99da767410\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"large_WhatsApp Image 2022-04-01 at 19.29.36.jpeg\",\n              \"path\": null,\n              \"size\": 122.98,\n              \"width\": 750,\n              \"height\": 1000\n            },\n            \"small\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/small_Whats_App_Image_2022_04_01_at_19_29_36_99da767410.jpeg\",\n              \"hash\": \"small_Whats_App_Image_2022_04_01_at_19_29_36_99da767410\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"small_WhatsApp Image 2022-04-01 at 19.29.36.jpeg\",\n              \"path\": null,\n              \"size\": 41.6,\n              \"width\": 375,\n              \"height\": 500\n            },\n            \"medium\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/medium_Whats_App_Image_2022_04_01_at_19_29_36_99da767410.jpeg\",\n              \"hash\": \"medium_Whats_App_Image_2022_04_01_at_19_29_36_99da767410\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"medium_WhatsApp Image 2022-04-01 at 19.29.36.jpeg\",\n              \"path\": null,\n              \"size\": 78.75,\n              \"width\": 563,\n              \"height\": 750\n            },\n            \"thumbnail\": {\n              \"ext\": \".jpeg\",\n              \"url\": \"/uploads/thumbnail_Whats_App_Image_2022_04_01_at_19_29_36_99da767410.jpeg\",\n              \"hash\": \"thumbnail_Whats_App_Image_2022_04_01_at_19_29_36_99da767410\",\n              \"mime\": \"image/jpeg\",\n              \"name\": \"thumbnail_WhatsApp Image 2022-04-01 at 19.29.36.jpeg\",\n              \"path\": null,\n              \"size\": 6.21,\n              \"width\": 117,\n              \"height\": 156\n            }\n          },\n          \"hash\": \"Whats_App_Image_2022_04_01_at_19_29_36_99da767410\",\n          \"ext\": \".jpeg\",\n          \"mime\": \"image/jpeg\",\n          \"size\": 208.06,\n          \"url\": \"/uploads/Whats_App_Image_2022_04_01_at_19_29_36_99da767410.jpeg\",\n          \"previewUrl\": null,\n          \"provider\": \"local\",\n          \"provider_metadata\": null,\n          \"createdAt\": \"2022-05-12T14:30:30.615Z\",\n          \"updatedAt\": \"2022-05-12T14:30:30.615Z\"\n        }\n      ],\n      \"createdBy\": {\n        \"id\": 1,\n        \"firstname\": \"Kamlesh\",\n        \"lastname\": \"Bobde\",\n        \"username\": \"admin\"\n      },\n      \"updatedBy\": {\n        \"id\": 1,\n        \"firstname\": \"Kamlesh\",\n        \"lastname\": \"Bobde\",\n        \"username\": \"admin\"\n      }\n    }\n}\nlet panelGroupId = 1;\nexport default class ContentDetailModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n            collectionTypes: [],\n            mockRows: [],\n            selectedContent: [],\n            selectedCollectionType: null,\n            collectionAttributes: this.props.dummyData,\n            activeTabKey: 0,\n          };\n        this.dataToShowOnModal = {};\n        this.toggleTab = this.toggleTab.bind(this);\n\n        this.renderPanel = this.renderPanel.bind(this);\n        this.renderPanelHeading = this.renderPanelHeading.bind(this);\n        this.renderPanelTitleToggle = this.renderPanelTitleToggle.bind(this);\n        this.renderPanelGroup = this.renderPanelGroup.bind(this);\n        this.renderPanelBody = this.renderPanelBody.bind(this);\n        this.renderAccordionData = this.renderAccordionData.bind(this);\n        this.isImageObject = this.isImageObject.bind(this);\n        this.ignoreProps = this.ignoreProps.bind(this);\n    }\n\n    toggleTab = (index) => {\n        this.setState({ activeTabKey: index })\n    }\n\n    constructContentDetailsForModal = () => {\n        console.log('this.props.contentDetailsOnModal: ', this.props.contentDetailsOnModal);\n        if (Object.keys(this.props.contentDetailsOnModal).length && Object.keys(this.props.contentDetailsOnModal).indexOf('createdBy')) {\n            this.dataToShowOnModal = { ...this.props.contentDetailsOnModal };\n            const { firstname, lastname } = this.dataToShowOnModal.createdBy;\n            const { firstname: updatedFname, lastname: updatedLname } = this.dataToShowOnModal.updatedBy;\n            const { createdBy, updatedBy } = this.dataToShowOnModal;\n            if (createdBy) this.dataToShowOnModal.createdBy = `${firstname} ${lastname}`;\n            if (updatedBy) this.dataToShowOnModal.updatedBy = `${updatedFname} ${updatedLname}`;\n        }\n    }\n\n    renderElementByType_old = (key) => {\n        if (this.dataToShowOnModal[key] === null || this.dataToShowOnModal[key] === undefined) return\n        if (typeof this.dataToShowOnModal[key] === 'boolean') {\n            return this.dataToShowOnModal[key] + '';\n        } else if (Array.isArray(this.dataToShowOnModal[key])) {\n            // For MultiMedia\n            if (this.dataToShowOnModal[key] && this.dataToShowOnModal[key][0]['ext']) {\n                return this.dataToShowOnModal[key].map(pic => (\n                    <img src={process.env.REACT_APP_STRAPI_API_URL + pic.formats.thumbnail.url} height=\"50px\" width=\"50px\" alt={pic['name']} />\n                ))\n            } else {\n                <b>Not Handle Please Check</b>\n            }\n        } else if (typeof this.dataToShowOnModal[key] === 'object') {\n            // For SingleMedia\n            if (this.dataToShowOnModal[key]['ext']) {\n                if (typeof this.dataToShowOnModal[key] === 'object') {\n                    return <img src={process.env.REACT_APP_STRAPI_API_URL + this.dataToShowOnModal[key].formats.thumbnail.url} width=\"50px\" height=\"50px\" alt={this.dataToShowOnModal[key]['name']} />\n                }\n            }\n            return JSON.stringify(this.dataToShowOnModal[key]);\n        }\n        return this.dataToShowOnModal[key];\n    }\n\n    renderElementByType = (key) => {\n        if (this.dataToShowOnModal[key] === null || this.dataToShowOnModal[key] === undefined) return\n        if (typeof this.dataToShowOnModal[key] === 'boolean') {\n            return this.dataToShowOnModal[key] + '';\n        } else if (Array.isArray(this.dataToShowOnModal[key])) {\n            // For MultiMedia\n            if (this.dataToShowOnModal[key] && this.dataToShowOnModal[key][0] && this.dataToShowOnModal[key][0]['ext']) {\n                return this.dataToShowOnModal[key].map((pic, index) => (\n                    <img key={index} src={process.env.REACT_APP_STRAPI_API_URL + pic.formats.thumbnail.url} height=\"50px\" width=\"50px\" alt={pic['name']} />\n                ))\n            } else {\n                <b>Not Handle Please Check</b>\n            }\n        } else if (typeof this.dataToShowOnModal[key] === 'object') {\n            // For SingleMedia\n            if (this.dataToShowOnModal[key]['ext']) {\n                if (typeof this.dataToShowOnModal[key] === 'object') {\n                    return <img src={process.env.REACT_APP_STRAPI_API_URL + this.dataToShowOnModal[key].formats.thumbnail.url} width=\"50px\" height=\"50px\" alt={this.dataToShowOnModal[key]['name']} />\n                }\n            }\n            return JSON.stringify(this.dataToShowOnModal[key]);\n        }\n        return this.dataToShowOnModal[key];\n    }\n\n    renderAccordionData = (data) => {\n        if (data === null || data === undefined) {\n            return <span> - </span>\n        } else if (typeof data === 'boolean') {\n            return data.toString();\n        } else if (typeof data === 'string') {\n            if(this.endsWithAnyImageExtension(data)) {\n               return <img src={process.env.REACT_APP_STRAPI_API_URL + data} width=\"75px\" height=\"75px\" alt='image' />\n            } \n            return data;\n        } else if (typeof data === 'number') {\n            return data;\n        } else if (typeof data === 'object') {\n            return data;\n        } else {\n            return <span> - </span>;\n        }\n    }\n\n    endsWithAnyImageExtension = (string) => {\n        for (let suffix of STRAPI_IMAGE_EXTENSIONS)  \n            if(string.toUpperCase().endsWith(suffix))\n                return true;\n        return false;\n    }\n\n    isObject = (data) => {\n        if (data) {\n            if (typeof data === 'object') {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    isImageObject = (object) => {\n        let keys = Object.keys(object);\n        if(keys.includes('ext') && keys.includes('formats') && keys.includes('url')) {\n            if(STRAPI_IMAGE_EXTENSIONS.includes(object['ext'].toUpperCase())) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    ignoreProps = (key) => {\n        return !key.match(\"createdAt\") && !key.match(\"updatedAt\") && !key.match(\"publishedAt\") && !key.match(\"createdBy\") && !key.match(\"updatedBy\") && !key.match(\"id\");\n    }\n\n    renderPanelGroup = (data) => {\n        panelGroupId = panelGroupId + 1;\n        return (\n            <PanelGroup accordion id={panelGroupId}>\n                {data && Object.keys(data).length > 0 \n                ? \n                    !this.isImageObject(data) \n                    ?\n                    Object.keys(data).filter(key => this.ignoreProps(key)).map((key, index) => {\n                        return (this.renderPanel(key, index, data[key]));\n                    })\n                    :\n                    this.renderPanel(STRAPI_IMAGE_URL_KEY, 0, data[STRAPI_IMAGE_URL_KEY])\n                : \n                <span>No data available</span>}\n            </PanelGroup>\n        )\n    }\n\n    renderPanel = (theKey, theIndex, data) => {\n        // if (!this.isObject(data)) {\n        //     // return (<Row key={theIndex} style={{ marginLeft: '1px', backgroundColor: '#F5FFFA', border:'1px solid transparent' }}>\n        //     //             <span key={theIndex} style={{ marginLeft: '20px'}}>{theKey.charAt(0).toUpperCase() + theKey.slice(1)}:</span>{this.renderAccordionData(data)}\n        //     //         </Row>)\n\n        //     return (\n        //         <div key={theIndex} className=\"row\" style={{ marginBottom: \"2rem\", marginTop: \"1rem\" }}>\n        //             <div className=\"col-xs-12\">\n        //                 <Col xs={1}>\n        //                     <strong>{theKey.charAt(0).toUpperCase() + theKey.slice(1)}</strong>\n        //                 </Col>\n        //                 <Col xs={11}>\n        //                 {!this.isObject(data) && this.renderElementByType(theKey)}\n        //                 </Col>\n        //             </div>\n        //         </div>\n        //     )\n        // } else {\n            return (\n                <Panel eventKey={theIndex} key={theIndex}>\n                    {this.renderPanelHeading(theKey, data)}\n                    {\n                        this.isObject(data)\n                        &&\n                        this.renderPanelBody(data, true)\n                    }\n                </Panel>)\n        // }\n    }\n\n    renderPanelHeading = (theKey, data) => {\n        return (\n            <Panel.Heading>\n                {this.isObject(data) \n                ? \n                this.renderPanelTitleToggle(theKey) \n                : \n                this.renderPanelTitle(theKey, data)}\n            </Panel.Heading>\n        );\n    }\n\n    renderPanelTitle = (theKey, data) => {\n        return (\n            <Panel.Title>\n                <span style={{ marginLeft: '15px' }}>\n                    {theKey.toUpperCase() === STRAPI_IMAGE_URL_KEY.toUpperCase() \n                    ? \n                    '' \n                    : \n                    theKey.charAt(0).toUpperCase() + theKey.slice(1) + ':'}  </span>  {this.renderAccordionData(data)}\n            </Panel.Title>\n        );\n    }\n\n    renderPanelTitleToggle = (theKey) => {\n        return (\n            <Panel.Title toggle>\n                <span>{theKey.charAt(0).toUpperCase() + theKey.slice(1)}</span>\n            </Panel.Title>\n        );\n    }\n\n    renderPanelBody = (data, isObject) => {\n        if (isObject) {\n            return (\n                <Panel.Body collapsible>\n                    {this.renderPanelGroup(data)}\n                </Panel.Body>\n            )\n        } else {\n            return (\n                <Panel.Body collapsible>\n                    <span>{data}</span>\n                </Panel.Body>\n            )\n        }\n    }\n\n    render() {\n        this.constructContentDetailsForModal();\n        console.log('this.dataToShowOnModal: ', Object.keys(this.dataToShowOnModal));\n        return (\n            <>\n                <Modal dialogClassName=\"ContentsFilterModal\" show={this.props.show} onHide={this.props.onHide}>\n                    <Modal.Header>\n                        <button\n                            className=\"close\"\n                            onClick={this.props.onHide}\n                            aria-hidden=\"true\"\n                            aria-label=\"Close\"\n                        >\n                            <Icon type=\"pf\" name=\"close\" />\n                        </button>\n                        <Modal.Title>{Object.keys(this.dataToShowOnModal).length > 0 && this.dataToShowOnModal[Object.keys(this.dataToShowOnModal)[1]]}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div\n                            className=\"CollapsibleSection__title no-padding\"\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                        </div>\n                        <div>\n                            <Tabs id={'id'} activeKey={this.state.activeTabKey} onSelect={this.toggleTab}>\n                                 <Tab eventKey={0} title=\"English kamlesh\">\n                                {/*    {Object.keys(this.dataToShowOnModal).length > 0 && Object.keys(this.dataToShowOnModal).filter(key => ignoreProps(key)).map((key, i) => {\n                                        return (\n                                            <div key={i} className=\"row\" style={{ marginBottom: \"2rem\", marginTop: \"1rem\" }}>\n                                                <div className=\"col-xs-12\">\n                                                    <Col xs={2}>\n                                                        <strong>{key.charAt(0).toUpperCase() + key.slice(1)}</strong>\n                                                    </Col>\n                                                    <Col xs={10}>\n                                                        {\n                                                            this.renderElementByType(key)\n                                                        }\n                                                    </Col>\n                                                </div>\n                                            </div>\n                                        );\n                                    })} */}\n                                    {/* My code */}\n\n                                    {this.renderPanelGroup(this.dataToShowOnModal)}\n                                    {/* {this.renderPanelGroup(tempData)} */}\n                                        \n\n                               {/* //======================hardcoded example ==============  */}\n                    {/* <PanelGroup accordion id=\"ent-1\">\n                                    <Panel id='1' eventKey={1} key={2}>\n                                        <Panel.Heading id='13'>\n                                            <Panel.Title id='30' toggle><span style={{marginLeft:'10px'}}>Collapsible Group Item #1</span></Panel.Title>\n                                        </Panel.Heading>\n                                        <Panel.Body collapsible>\n\n                                            <PanelGroup accordion id=\"ent-1\">\n                                                <Panel eventKey={3} key={4}>\n                                                    <Panel.Heading id='4'>\n                                                        <Panel.Title><span style={{ marginLeft: '15px' }}>Int #1</span></Panel.Title>\n                                                    </Panel.Heading>\n                                                </Panel>\n                                                <Panel eventKey={5} key={6}>\n                                                    <Panel.Heading>\n                                                        <Panel.Title toggle><span style={{ marginLeft: '5px' }}>Int #1</span></Panel.Title>\n                                                    </Panel.Heading>\n                                                    <Panel.Body collapsible>\n                                                        Int #1 Body\n                                                    </Panel.Body>\n                                                </Panel>\n                                                <Panel eventKey={7} key={8}>\n                                                    <Panel.Heading>\n                                                        <Panel.Title toggle><span style={{ marginLeft: '5px' }}></span></Panel.Title>\n                                                    </Panel.Heading>\n                                                    <Panel.Body collapsible>\n                                                        Int #2 Body\n                                                    </Panel.Body>\n                                                </Panel>\n                                                <Panel eventKey={9} key={10}>\n                                                    <Panel.Heading>\n                                                        <Panel.Title toggle><span style={{ marginLeft: '5px' }}>Hello</span></Panel.Title>\n                                                    </Panel.Heading>\n                                                    <Panel.Body collapsible>\n\n                                                        <PanelGroup accordion id=\"ent-2\">\n                                                            <Panel eventKey={11} key={12}>\n                                                                <Panel.Heading>\n                                                                    <Panel.Title toggle><span style={{ marginLeft: '5px' }}>Hello in1</span></Panel.Title>\n                                                                </Panel.Heading>\n                                                                <Panel.Body collapsible>\n                                                                Hello in1 Body\n                                                                </Panel.Body>\n                                                            </Panel>\n                                                            <Panel eventKey={13} key={14}>\n                                                                <Panel.Heading>\n                                                                    <Panel.Title><span style={{ marginLeft: '5px' }}>Hello in2</span></Panel.Title>\n                                                                </Panel.Heading>\n                                                            </Panel>\n                                                        </PanelGroup>\n\n                                                    </Panel.Body>\n                                                </Panel>\n                                                \n                                            </PanelGroup>\n                                        </Panel.Body>\n                                    </Panel>\n                            </PanelGroup> */}\n\n\n{/* =========== <<<<========kamlesh ================== */}\n\n                                </Tab>\n                                <Tab eventKey={1} title=\"Italiano\">\n                                    {Object.keys(this.dataToShowOnModal).length > 0 && Object.keys(this.dataToShowOnModal).filter(key => ignoreProps(key)).map((key, i) => {\n                                        return (\n                                            <div key={i} className=\"row\" style={{ marginBottom: \"2rem\", marginTop: \"1rem\" }}>\n                                                <div className=\"col-xs-12\">\n                                                    <Col xs={2}>\n                                                        <strong>{key.charAt(0).toUpperCase() + key.slice(1)}</strong>\n                                                    </Col>\n                                                    <Col xs={10}>\n                                                        {\n                                                            // this.renderElementByType(key)\n                                                        }\n                                                    </Col>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </Tab>\n                            </Tabs>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button bsStyle=\"default\" className=\"btn-cancel\" onClick={this.props.onHide}>\n                            Close\n                        </Button>\n                        <Button bsStyle=\"primary\" onClick={this.close} onClick={this.props.onHide}>\n                            Ok\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n\n        function ignoreProps(key) {\n            return !key.match(\"createdAt\") && !key.match(\"updatedAt\") && !key.match(\"publishedAt\") && !key.match(\"createdBy\") && !key.match(\"updatedBy\") && !key.match(\"id\");\n        }\n    }\n}\n","import {\n  Col, Grid, PaginationRow, Row\n} from 'patternfly-react';\nimport React, { Component } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { filterContentsByName, getCollectionTypes, getContents } from '../api/Api';\nimport { LASTPAGE, NAME, PAGE, PAGECHANGEVALUE, PAGEINPUT, PAGESIZE, PERPAGEOPTIONS, SEARCH_CONTENT_BY_NAME, SELECT_COLLECTION_TYPE, TOTALITEMS, T_HEADING, UNIVERSAL_DATE_FORMAT } from '../helper/Constant';\nimport ContentDetailModal from '../ui/ContentDetailModal';\n\nexport default class SingleContentList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: PAGE,\n      currPageWillUpdating: PAGE,\n      pageSize: PAGESIZE,\n      totalItems: TOTALITEMS,\n      lastPage: LASTPAGE,\n      pageInput: PAGEINPUT,\n      pageChangeValue: PAGECHANGEVALUE,\n      show: false,\n      contentDetailsOnModal: {},\n      searchQuery: '',\n      setSearchBy: '',\n      // DATA STATE\n      collectionType: [],\n      selectedCollectionType: [],\n      contents: [],\n      selectedContent: null\n    }\n  }\n\n  componentDidMount = async () => {\n    await this.setCollectionTypeState();\n  }\n  \n  componentDidUpdate = async (prevProps, prevState) => {\n    if (prevProps.selectedCollectionType !== this.props.selectedCollectionType ||\n      prevState.pageSize !== this.state.pageSize) {\n      this.setState({ page: PAGE, pageInput: PAGE, currPageWillUpdating: PAGE  },\n        async () => {\n          await this.getContentsByCollectionType(this.state.selectedCollectionType[0].value, this.state.page, this.state.pageSize);\n        }\n      )\n    }\n    if (prevState.page !== this.state.page) {\n      this.setState({ selectedContent: null });\n      await this.getContentsByCollectionType(this.state.selectedCollectionType[0].value, this.state.page, this.state.pageSize);\n    }\n  }\n\n  async setCollectionTypeState() {\n    const { data: collectionTypeData } = await getCollectionTypes();\n    const collectionTypeApiData = this.filterUidByApiPrefix(collectionTypeData);\n    this.setState({ collectionType: collectionTypeApiData.map(el => ({ label: el.info.displayName, value: el.info.singularName })) });\n  }\n\n  filterUidByApiPrefix = (collectionTypeData) => {\n    return collectionTypeData.filter(el => el.uid.startsWith('api::'))\n  }\n\n  open = async (content) => {\n    this.setState({ show: true, contentDetailsOnModal: content })\n  }\n\n  close = () => {\n    this.setState({ show: false })\n  }\n\n  handleCollectionTypeChange = async (collectionType) => {\n    const collType = collectionType[0]\n    this.setState({ selectedCollectionType: collectionType })\n    if (collType && collType.value) {\n      await this.getContentsByCollectionType(collType.value)\n      this.props.setSelectedContentName(collType.value)\n    } else {\n      this.props.setSelectedContentName(null);\n    }\n  }\n\n  getContentsByCollectionType = async (collectionType, page, pageSize) => {\n    const contentData = await getContents(collectionType, page, pageSize);\n    this.setState({\n      contents: contentData.results,\n      lastPage: contentData.pagination.pageCount,\n      page: contentData.pagination.page,\n      pageSize: contentData.pagination.pageSize,\n      totalItems: contentData.pagination.total,\n      setSearchBy: contentData && contentData.results.length && Object.keys(contentData.results[0])[1]\n    });\n  }\n\n  /**\n   * Renders Button on Typehead.\n   * @returns Button element\n   */\n  renderToggleButton = ({ isMenuShown, onClick }) => (\n    <button\n      type=\"button\"\n      style={{ position: \"absolute\", height: \"100%\", top: \"0px\", right: \"0px\", border: \"1px solid lightgray\" }}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick(e);\n      }}\n    ><span className=\"fa fa-angle-down\"></span></button>\n  );\n\n  changePage(page) {\n    this.setState({ page: page, currPageWillUpdating: page })\n  }\n\n  setPage = value => {\n    const page = Number(value);\n    if (\n      !Number.isNaN(value) &&\n      value !== '' &&\n      page > 0 &&\n      page <= this.totalPages()\n    ) {\n      let newPaginationState = Object.assign({}, this.state.pagination);\n      newPaginationState.page = page;\n      this.setState({ pagination: newPaginationState, pageChangeValue: page });\n    }\n  }\n\n  onContentSearch = async (e) => {\n    e.preventDefault();\n    // collectionType, query, searchBy\n    if (this.state.searchQuery) {\n      const searchResult = await filterContentsByName(\n        this.state.selectedCollectionType[0].value,\n        this.state.searchQuery, this.state.setSearchBy, PAGE, PAGESIZE\n      );\n      this.setState({\n        contents: searchResult.results,\n        lastPage: searchResult.pagination.pageCount,\n        page: searchResult.pagination.page,\n        pageSize: searchResult.pagination.pageSize,\n        totalItems: searchResult.pagination.total,\n      })\n    } else {\n      this.getContentsByCollectionType(this.state.selectedCollectionType[0].label)\n    }\n  }\n\n  handleQueryChange = (e) => {\n    e.preventDefault();\n    this.setState({ searchQuery: e.target.value })\n  }\n\n  onPerPageSelect = (pageSize) => {\n    this.setState({pageSize})\n  }\n\n  onPageInput = e => {\n    this.setState({ currPageWillUpdating: e.target.value })\n  }\n\n  onSubmit = () => {\n    if (+this.state.currPageWillUpdating && this.state.currPageWillUpdating <= this.state.lastPage) {\n      this.setState({ page: +this.state.currPageWillUpdating })\n    }\n  };\n\n  render() {\n    const pagination = {\n      page: this.state.page,\n      perPage: this.state.pageSize,\n      perPageOptions: PERPAGEOPTIONS,\n    };\n    const itemsStart = this.state.totalItems === 0 ? 0 : ((this.state.page - 1) * this.state.pageSize) + 1;\n    const itemsEnd = Math.min(this.state.page * this.state.pageSize, this.state.totalItems);\n\n    return (\n      <Grid>\n        <Row className=\"mt-2\">\n          <Col lg={12}>\n            <legend>\n              Select Content\n            </legend>\n          </Col>\n        </Row>\n        <Row className=\"mt-2\">\n          <Col lg={3}>\n            <h6><b>{SELECT_COLLECTION_TYPE}</b></h6>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={3}>\n            <Typeahead\n              id=\"collectionTypeDropdown\"\n              placeholder={SELECT_COLLECTION_TYPE}\n              options={this.state.collectionType}\n              onChange={this.handleCollectionTypeChange}\n              selected={this.state.selectedCollectionType}\n            >\n              {({ isMenuShown, toggleMenu }) => (\n                this.renderToggleButton({ isMenuShown, onClick: toggleMenu })\n              )}\n            </Typeahead>\n          </Col>\n        </Row>\n        {\n          Object.keys(this.state.selectedCollectionType).length > 0 &&\n          <>\n            <Row className=\"mt-2\">\n              <Col lg={3}>\n                <h5 style={{ marginBottom: \"0px\" }}><strong>Article</strong></h5>\n              </Col>\n            </Row>\n            <Row>\n              <Col lg={12}>\n                <div\n                  className=\"ContentsFilter well\"\n                  role=\"button\"\n                  tabIndex={0}\n                  style={{ margin: '1rem 0rem' }}\n                >\n                  <form >\n                    <div style={{ display: 'flex', margin: '1rem 0rem' }}>\n                      <button id=\"dropdown-example\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" type=\"button\" className=\"dropdown-toggle btn btn-default\">{NAME}</button>\n                      <input\n                        type=\"search\"\n                        name=\"name\"\n                        // value={this.state.values.name}\n                        onChange={this.handleQueryChange}\n                        role=\"combobox\"\n                        className=\"rbt-input-main form-control rbt-input\"\n                        placeholder={SEARCH_CONTENT_BY_NAME}\n                      />\n                    </div>\n                    <div className=\"pull-right mbt10\" style={{ margin: \"0 0 10px 0\" }} >\n                      <button className=\"btn btn-primary\" onClick={this.onContentSearch}>Search</button>\n                    </div>\n                  </form>\n                </div>\n              </Col>\n            </Row>\n            <Row className=\"mt-2\">\n              <Col lg={12}>\n                <table className=\"table dataTable table-striped table-bordered table-hover\">\n                  <thead>\n                    <tr>\n                      {Object.keys(T_HEADING).map(el => <th key={el}>{T_HEADING[el]}</th>)}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.contents.map(content => {\n                      return (\n                        <tr key={content.id} className=\"rowCursorPointer\">\n                          <td width=\"5%\" align=\"center\">\n                            <input onClick={() => {\n                              this.setState({ selectedContent: content })\n                            }}\n                              type=\"radio\" id={content + content.id} name=\"content\" value={content.id}\n                            />\n                          </td>\n                          <td onClick={() => this.open(content)}>{content[Object.keys(content)[1]]}</td>\n                          <td onClick={() => this.open(content)}>{`${content.createdBy.firstname} ${content.createdBy.lastname}`}</td>\n                          <td onClick={() => this.open(content)}>{moment(new Date(content.publishedAt)).format(UNIVERSAL_DATE_FORMAT)}</td>\n                          <td onClick={() => this.open(content)}>{moment(new Date(content.updatedAt)).format(UNIVERSAL_DATE_FORMAT)}</td>\n                        </tr>)\n                    })}\n                  </tbody>\n                </table>\n                <div className=\"custom-page\"></div>\n                <PaginationRow\n                  itemCount={this.state.totalItems}\n                  itemsStart={itemsStart}\n                  itemsEnd={itemsEnd}\n                  viewType=\"table\"\n                  pagination={pagination}\n                  amountOfPages={this.state.lastPage}\n                  pageInputValue={this.state.currPageWillUpdating}\n                  onPageSet={this.changePage}\n                  onPerPageSelect={this.onPerPageSelect}\n                  onFirstPage={() => this.changePage(1)}\n                  onPreviousPage={() => this.changePage(this.state.page - 1)}\n                  onPageInput={this.onPageInput}\n                  onNextPage={() => this.changePage(this.state.page + 1)}\n                  onLastPage={() => this.changePage(this.state.lastPage)}\n                  onSubmit={this.onSubmit}\n                // messages={messages} i18n\n                />\n              </Col>\n            </Row>\n            <Row className=\"mt-2\">\n              <Col lg={9}>\n              </Col>\n              <Col lg={3} className=\"SingleContentConfigFormBody__addButtons\">\n                <Link to=\"/\">\n                  <button className=\"btn-default btn\">Cancel</button>\n                  <button className=\"btn-primary btn AddContentTypeFormBody__save--btn\" onClick={()=>this.props.setContent([this.state.selectedContent])} disabled={!this.state.selectedContent}>Save</button>\n                </Link>\n              </Col>\n            </Row>\n          </>\n        }\n        <ContentDetailModal show={this.state.show} onHide={this.close} contentDetailsOnModal={this.state.contentDetailsOnModal} />\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, HashRouter, Switch } from 'react-router-dom';\nimport Config from './page/Config';\nimport SingleContentList from './page/SingleContentList';\n\nclass App extends Component {\n    // TODO: not delete because this all state will be pass through web-components later...\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedContent: [],\n            selectedContentId: 0,\n            selectedTemplateId: 'default',\n            selectedContentName: null,\n            name: 'vijayy',\n            nameTwo: 'nameTwoVar',\n            // collectionTypes: [],\n        };\n    }\n\n    setContent = (data) => {\n        this.setState({ selectedContent: data })\n        if (data.length) this.setState({ selectedContentId: data[0].id })\n    }\n\n    setSelectedContentName = (contentName) => {\n        this.setState({ selectedContentName: contentName, name: contentName, nameTwo: contentName })\n    }\n\n    setTemplateId = (tempId) => {\n        this.setState({ selectedTemplateId: tempId })\n    }\n\n    render() {\n        return (\n            <>\n                <HashRouter>\n                    <Switch>\n                        <Route path='/' exact>\n                            <Config selectedContent={this.state.selectedContent} setTemplateId={this.setTemplateId} />\n                        </Route>\n                        <Route path='/configpage' exact>\n                            <SingleContentList setContent={this.setContent} setSelectedContentName={this.setSelectedContentName} />\n                        </Route>\n\n                    </Switch>\n                </HashRouter>\n            </>\n        )\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../App';\n\nclass WidgetElement extends HTMLElement {\n    constructor() {\n        super();\n        this.reactRootRef = React.createRef();\n        this.mountPoint = null;\n    }\n\n    // Big Hack\n    get config() {\n        console.log(\"GET CONFIG THIS.REACTROOTREF.CURRENT\",this.reactRootRef.current)\n        return this.reactRootRef.current ? this.reactRootRef.current.state : {};\n    }\n\n    set config(value) {\n        console.log(\"BALUE\", value)\n        console.log(\"SET CONFIG\", this.reactRootRef.current);\n        return this.reactRootRef.current.setState(value);\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        ReactDOM.render(<App ref={this.reactRootRef} />, this.mountPoint);\n    }\n}\n\nwindow.customElements.define('my-widget-config', WidgetElement);\n\nexport default WidgetElement;\n"],"sourceRoot":""}